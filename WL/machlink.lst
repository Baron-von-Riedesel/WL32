Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 1 - 1


				;*********************************************************************
				;*   MACHLINK.ASM                                                    *
				;*                                                                   *
				;*   By:            Michael Devore                                   *
				;*   Date:          11/06/92                                         *
				;*   Model:         Small                                            *
				;*   Version:       2.5                                              *
				;*   Assembler:     MASM 5.0                                         *
				;*   Environment:   MS-DOS 2.x+                                      *
				;*                                                                   *
				;*   main driver for linker                                          *
				;*                                                                   *
				;*********************************************************************
				
				TITLE   WARPLINK machlink
				PAGE    50,80
				
				IFNDEF  NODOS
				    DOSSEG
				ENDIF
				
				.MODEL  SMALL
				.STACK  400h
				
				;*****************************
				;* Include files             *
				;*****************************
				
				INCLUDE MLEQUATE.INC
			      C ;***********************************************
			      C **********************
			      C ;*   MLEQUATE.INC                               
			      C                      *
			      C ;*                                              
			      C                      *
			      C ;*   By:            Michael Devore              
			      C                      *
			      C ;*   Date:          04/29/93                    
			      C                      *
			      C ;*   Model:         Small                       
			      C                      *
			      C ;*   Version:       2.5                         
			      C                      *
			      C ;*   Assembler:     MASM 5.0                    
			      C                      *
			      C ;*   Environment:   MS-DOS 2.x+                 
			      C                      *
			      C ;*                                              
			      C                      *
			      C ;*   Global file equates                        
			      C                      *
			      C ;*                                              
			      C                      *
			      C ;***********************************************
			      C **********************
			      C 
			      C ; modifiable equate, tracks number of internal e
			      C rror types
 = 000E			      C INTERNAL_ERR_COUNT  EQU 14
			      C 
			      C IFDEF	DEMO
			      C ELSE
 = "WarpLink"		      C 	LINKER	TEXTEQU	<"WarpLink">
 = "WL"			      C 	LINKERCAPS	TEXTEQU	<"WL">
			      C ENDIF
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 2 - 1


			      C 
			      C ; general use equates
			      C 
 = 0000			      C STDIN   EQU 0               ; standard input dev
			      C ice
 = 0001			      C STDOUT  EQU 1               ; standard output de
			      C vice
 = 0002			      C STDERR  EQU 2               ; standard error dev
			      C ice
			      C 
 = 0007			      C BELL    EQU     7           ; beep the speaker
 = 000D			      C CR      EQU     13          ; carriage return
 = 000A			      C LF      EQU     10          ; line feed
			      C 
			      C ; object record names
			      C 
 = 007A			      C BLKDEF  EQU     7ah
 = 007C			      C BLKEND  EQU     7ch
 = 007E			      C DEBSYM  EQU     7eh
			      C 
 = 0080			      C THEADR  EQU     80h
 = 0082			      C LHEADR  EQU     82h
 = 0088			      C COMENT  EQU     88h
 = 008A			      C MODEND  EQU     8ah
 = 008C			      C EXTDEF  EQU     8ch
 = 008E			      C TYPDEF  EQU     8eh
 = 0090			      C PUBDEF  EQU     90h
 = 0092			      C LOCSYM  EQU     92h
 = 0094			      C LINNUM  EQU     94h
 = 0096			      C LNAMES  EQU     96h
 = 0098			      C SEGDEF  EQU     98h
 = 009A			      C GRPDEF  EQU     9ah
 = 009C			      C FIXUPP  EQU     9ch
 = 00A0			      C LEDATA  EQU     0a0h
 = 00A2			      C LIDATA  EQU     0a2h
 = 00B0			      C COMDEF  EQU     0b0h
			      C 
 = 00B2			      C BAKPAT1 EQU     0b2h        ; Quick C back patch
			      C  record type 1, not implemented
 = 00B3			      C BAKPAT2 EQU     0b3h        ; Quick C back patch
			      C  record type 1, not implemented
			      C 
 = 00B4			      C LEXTDEF EQU     0b4h
 = 00B6			      C LPUBDEF1    EQU 0b6h
 = 00B7			      C LPUBDEF2    EQU 0b7h
 = 00B8			      C LCOMDEF EQU     0b8h
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 3 - 1


 = 00BC			      C CEXTDEF	EQU	0bch
 = 0099			      C SEGDEF32	EQU	99h
 = 00A1			      C LEDATA32	EQU	0a1h
			      C 
 = 00A8			      C WKEXT   EQU     0a8h        ; weak extern, used 
			      C by PDS 7.x, COMENT class
			      C 
 = 00F0			      C MSLIBR  EQU     0f0h        ; MS library header 
			      C record (aka MSLHED)
 = 00F0			      C MSLHED  EQU     0f0h        ; MS library header 
			      C record (aka MSLIBR)
 = 00F2			      C MSEXTDICT   EQU 0f2h        ; MS extended dictio
			      C nary identifier byte
 = 00F1			      C MSLEND  EQU     0f1h        ; MS library end rec
			      C ord
			      C 
 = 00A2			      C PASS_TWO_MARK   EQU 0a2h    ; COMENT class, link
			      C er pass two marker
 = 009E			      C DOSSEG_MARK EQU 9eh         ; COMENT class, DOSS
			      C EG segment ordering
 = 0081			      C LIB_SEARCH_1    EQU 81h     ; COMENT class, defa
			      C ult library search name type 1
 = 009F			      C LIB_SEARCH_2    EQU 9fh     ; COMENT class, defa
			      C ult library search name type 2
			      C 
			      C ; boundary value equates
			      C 
 = 0015			      C GRPDEF_MAX  EQU 21          ; maximum number of 
			      C GRPDEF records in one object module 
 = 00FF			      C SEGDEF_MAX  EQU 255         ; maximum number of 
			      C SEGDEF records in one object module
 = 01FF			      C LNAMES_MAX  EQU 511         ; maximum number of 
			      C logical names (lnames entries)
 = 03FF			      C EXTDEF_MAX  EQU 1023        ; maximum number of 
			      C external definitions in one object module
			      C                             ; must be 2^n-1
 = 8000			      C RELOC_MAX   EQU 32768       ; maximum number of 
			      C relocation items in .exe file
 = 0200			      C IDATA_BLK_MAX   EQU 512     ; maximum size of it
			      C erated data block
			      C 
 = 4000			      C IO_BUFF_SIZE    EQU 16384   ; buffer size for al
			      C l file i/o
 = 1000			      C REC_BUFF_SIZE   EQU 4096    ; maximum length of 
			      C object record
 = 0FFF			      C OVERLAY_MAX_COUNT   EQU 4095        ; maximum nu
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 4 - 1


			      C mber of overlays and overlaid publics
 = 07FF			      C OVL_MOD_PUB_MAX EQU 2047    ; maximum number of 
			      C overlaid publics in one overlay
			      C 
 = 0400			      C HASH_ARRAY_SIZE EQU 1024    ; size of hash point
			      C er array (10-bit)
			      C 
 = 1000			      C LIB_MAX_READ    EQU 4096    ; maximum size of fi
			      C le read from library module
			      C 
			      C ;*****************************
			      C ;* Block structure equates   *
			      C ;*****************************
			      C 
			      C ; object module name block equates and structure
			      C ; make all block sizes a multiple of 16 bytes fo
			      C r allocate memory DOS function 48h
 = 020C			      C OBJ_NAMELIST_SIZE   EQU (4*128+16-4)    ; allows
			      C  worst case 4 entries per block
 = 0021			      C OBJ_NAMBLK_SIZE EQU (OBJ_NAMELIST_SIZE+4)/16    
			      C ; size of block in paragraphs
 = 0210			      C OBJ_NAMBLK_BYSIZE   EQU OBJ_NAMBLK_SIZE*16  ; si
			      C ze of block in bytes
			      C 
			      C ; REFERENCE ONLY, block structure is not used (a
			      C llocations made dynamically)
 0210			      C OBJ_NAMBLK_STRUC    STRUC
 0000  0000		      C     free    DW  ?           ; free name list spa
			      C ce in block
 0002  0000		      C     objblk_ptr  DW  ?       ; segment of next bl
			      C ock, zero if none
 0004  020C [		      C     namelist    DB  OBJ_NAMELIST_SIZE DUP (?)   
        00		      C ; space for object module names
       ]
			      C OBJ_NAMBLK_STRUC    ENDS
			      C 
			      C 
			      C ; library name block equates and structure
			      C ; make all block sizes a multiple of 16 bytes fo
			      C r allocate memory DOS function 48h
 = 010C			      C LIB_NAMELIST_SIZE   EQU (2*128+16-4)    ; allows
			      C  worst case 2 entries per block
 = 0011			      C LIB_NAMBLK_SIZE EQU (LIB_NAMELIST_SIZE+4)/16    
			      C ; size of block in paragraphs
 = 0110			      C LIB_NAMBLK_BYSIZE   EQU LIB_NAMBLK_SIZE*16  ; si
			      C ze of block in bytes
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 5 - 1


			      C 
			      C ; REFERENCE ONLY, block structure is not used (a
			      C llocations made dynamically)
 0110			      C LIB_NAMBLK_STRUC STRUC
 0000  0000		      C     lns_free    DW  ?       ; free name list spa
			      C ce in block
 0002  0000		      C     lib_namblk_ptr  DW  ?   ; segment of next bl
			      C ock, zero if none
 0004  010C [		      C     lns_namelist    DB  LIB_NAMELIST_SIZE DUP (?
        00		      C )   ; space for library names
       ]
			      C LIB_NAMBLK_STRUC ENDS
			      C 
			      C 
			      C ; public declaration entry equates and structure
 = 0010			      C PUB_DECLENT_SIZE    EQU 16  ; size of an entry
			      C 
			      C ; REFERENCE ONLY, block structure is not used (a
			      C llocations made dynamically)
 0010			      C PUB_DECLENT_STRUC   STRUC
 0000  0000		      C     seg_partent_ptr DW  ?   ; segment pointer to
			      C  segdef partition entry
			      C                             ; if weak extdef, po
			      C inter to default resolution declaration entry
 0002  0000		      C     pdes_frame_number   DW  ?   ; frame number i
			      C f absolute, pointer to group entry if not and gr
			      C oup index
			      C                                 ; high word of c
			      C ommunal length if communal
			      C                                 ; overlaid publi
			      C c number, if overlaid or referenced from overlay
 0004  0000		      C     pub_nameent_ptr DW  ?   ; offset pointer to 
			      C pubdef name in pubdef names block
			      C                             ; current extdef cou
			      C nt if local communal in local block
 0006  0000		      C     pub_nameblk_ptr DW  ?   ; segment pointer to
			      C  pubdef name in pubdef names block
			      C                             ; length of name str
			      C ing if local communal in local block
 0008  0000		      C     pub_offset      DW  ?   ; public offset
			      C                             ; low word of commun
			      C al length if communal
			      C                             ;  (changed to commu
			      C nal offset at resolution time)
 000A  0000		      C     pub_declent_loptr   DW  ?   ; segment pointe
			      C r to entry with pubdef name alphabetically lower
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 6 - 1


			      C                                 ; low word of li
			      C b_id in nonlocal communal block if local communa
			      C l from library
			      C                                 ; current_obj in
			      C  nonlocal communal block if local communal from 
			      C object module
 000C  0000		      C     pub_declent_hiptr   DW  ?   ; segment pointe
			      C r to entry with pubdef name alphabetically highe
			      C r
			      C                                 ; high word of l
			      C ib_id in inlocal communal block if local communa
			      C l from library
 000E  00		      C     def_flag        DB  ?   ; ==0 if weak extdef
			      C , ==1 if extdef or comdef entry, ==2 if pubdef, 
			      C ==3 if absolute public
			      C                             ; high bit (80h) set
			      C  if extdef and either is or could be weak
			      C                             ; bit 6 (40h) set if
			      C  used in fixup
 000F  00		      C     gen_flag        DB  ?   ; high bit set (80h)
			      C  if group index associated with public declarati
			      C on
			      C                             ; bit 6 (40h) set if
			      C  communal variable
			      C                             ; bit 5 (20h) set if
			      C  local communal variable
			      C                             ; bit 4 (10h) set if
			      C  NEAR communal
			      C                             ; bit 3 (8) set if o
			      C verlay class
			      C                             ; bit 2 (4) set if l
			      C ocal public
			      C                             ; bit 1 (2) set if v
			      C ector written to lookup table
			      C                             ; bit 0 (1) set if i
			      C n overlay
			      C PUB_DECLENT_STRUC   ENDS
			      C 
			      C 
			      C ; public declaration block equates and structure
 = 0080			      C PUB_DECLENT_COUNT   EQU 128 ; number of entries 
			      C in pubdef declarations block
 = 0081			      C PUB_DECLBLK_SIZE    EQU (4+PUB_DECLENT_COUNT*PUB
			      C _DECLENT_SIZE+12)/16    ; size of block in parag
			      C raphs
			      C 
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 7 - 1


			      C ; REFERENCE ONLY, block structure is not used (a
			      C llocations made dynamically)
 0810			      C PUB_DECLBLK_STRUC   STRUC
 0000  0000		      C     entry_count DW  ?       ; count of used entr
			      C ies in block
 0002  0000		      C     pub_declblk_ptr DW  ?   ; segment pointer to
			      C  next block
 0004  000C [		      C     pdbs_filler DB  12 DUP (?)  ; unused, pads b
        00		      C lock size out to even paragraph
       ]
 0010  0800 [		      C     pdbs_entry  DB  PUB_DECLENT_COUNT*PUB_DECLEN
        00		      C T_SIZE DUP (?)  ; space for pubdef declaration e
       ]		      C ntries
			      C PUB_DECLBLK_STRUC   ENDS
			      C 
			      C 
			      C ; segdef entry equates and structure
 = 0020			      C SEG_DEFENT_SIZE EQU 32      ; size of an entry
			      C 
			      C ; REFERENCE ONLY, block structure is not used (a
			      C llocations made dynamically)
 0020			      C SEG_DEFENT_STRUC    STRUC
 0000  0000		      C     sdes_frame_number   DW  ?   ; frame number
 0002  00000000		      C     sdes_offset DD  ?       ; offset from start 
			      C of program
 0006  0000		      C     seg_len DW  ?           ; segment length
 0008  0000		      C     seg_nament_ptr  DW  ?   ; offset pointer to 
			      C segment name in lnames block
 000A  0000		      C     seg_namblk_ptr  DW  ?   ; segment pointer to
			      C  segment name in lnames block
 000C  0000		      C     class_nament_ptr    DW  ?   ; offset pointer
			      C  to class name in lnames block
 000E  0000		      C     class_namblk_ptr    DW  ?   ; segment pointe
			      C r to class name in lnames block
 0010  0000		      C     sdes_grp_ent_ptr DW  ?   ; pointer to group 
			      C entry
 0012  0000		      C     sdes_fill2  DW  ?       ; unused, pads entry
			      C  size to 32 bytes
 0014  0000		      C     seg_defent_nextptr  DW  ?   ; segment pointe
			      C r to next segment name entry with same hash code
 0016  0000		      C     seg_partent_firstptr    DW  ?   ; segment po
			      C inter to first segment partition entry
 0018  0000		      C     seg_partent_lastptr DW  ?   ; segment pointe
			      C r to last segment partition entry
 001A  00		      C     sdes_acbp_byte   DB  ?      ; acbp byte
 001B  00		      C     addr_resolved_flag  DB  ?   ; nonzero if seg
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 8 - 1


			      C ment was resolved to an address
 001C  00		      C     sdes_ovl_flag   DB  ?       ; bit 0 set if o
			      C verlay class
			      C                                 ; bit 1 set if l
			      C ength updated due to overlay vectors
			      C                                 ; bit 2 set if D
			      C DLs and overlaid segment
			      C                                 ; bit 5 set if s
			      C egment has end vectors (calls to overlays)
			      C                                 ; bit 6 set if v
			      C ector values written for segment
 001D  01		      C     sdes_filler DB  1           ; unused, pads e
			      C ntry size out to 32 bytes
 001E  0000		      C     sdes_end_vect   DW  ?       ; byte count of 
			      C end vectors added to segment
			      C                                 ; only used if e
			      C nd vectors for this segment
			      C SEG_DEFENT_STRUC    ENDS
			      C 
			      C 
			      C ; segdef block equates and structure
 = 0020			      C SEG_DEFENT_COUNT    EQU 32  ; number of entries 
			      C in segdef block
 = 0041			      C SEG_DEFBLK_SIZE EQU (4+SEG_DEFENT_COUNT*SEG_DEFE
			      C NT_SIZE+12)/16  ; size of block in paragraphs
			      C 
			      C ; REFERENCE ONLY, block structure is not used (a
			      C llocations made dynamically)
 0410			      C SEG_DEFBLK_STRUC    STRUC
 0000  0000		      C     sdbs_entry_count    DW  ?   ; count of used 
			      C entries in block
 0002  0000		      C     seg_defblk_ptr  DW  ?   ; segment pointer to
			      C  next block
 0004  000C [		      C     sdbs_filler DB  12 DUP (?)  ; unused, pads b
        00		      C lock size out to even paragraph
       ]
 0010  0400 [		      C     sdbs_entry  DB  SEG_DEFENT_COUNT*SEG_DEFENT_
        00		      C SIZE DUP (?)    ; space for segdef entries
       ]
			      C SEG_DEFBLK_STRUC    ENDS
			      C 
			      C 
			      C ; segment partition entry equates and structure
 = 0010			      C SEG_PARTENT_SIZE    EQU 16  ; size of an entry
			      C 
			      C ; REFERENCE ONLY, block structure is not used (a
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 9 - 1


			      C llocations made dynamically)
 0010			      C SEG_PARTENT_STRUC   STRUC
 0000  0000		      C     spes_offset DW  ?           ; offset of star
			      C t from true segment base
			      C                                 ; if overlaid se
			      C gment, count of segment fixups/relocation items
 0002  0000		      C     seg_partent_nextptr DW  ?   ; segment pointe
			      C r to next entry
 0004  0000		      C     seg_defent_backptr  DW  ?   ; segment pointe
			      C r to master segdef entry, the
			      C                                 ; owner of linke
			      C d segment partition entries
			      C                                 ; for overlaid s
			      C egment after 1st pass changed to overlay identif
			      C ier
 0006  00000000		      C     file_mod_id DD  ?       ; id number for obje
			      C ct module or library file+module
 000A  00		      C     record_index    DB  ?   ; record index, used
			      C  for pass 2 segdef entry lookup
 000B  00		      C     spes_acbp_byte  DB  ?   ; segment partition 
			      C acbp byte
 000C  0000		      C     spes_part_len   DW  ?   ; segment partition 
			      C length (prior to alignment adjustment)
 000E  00		      C     spes_vect_low   DB  ?   ; low byte of vector
			      C  count
 000F  00		      C     spes_ovl_flag   DB  ?   ; high bit set if se
			      C gment partition is an overlay
			      C                             ; bit 6 set if vecto
			      C r values written for segment
			      C                             ; bit 5 set if end v
			      C ectors written, calls to overlays
			      C                             ; bit 4 set if lengt
			      C h updated from near/shared vectors
			      C                             ; bit 3 set if Clipp
			      C er object module and incremental link
			      C                             ; bit 0-2 contain hi
			      C gh byte of vector count
			      C SEG_PARTENT_STRUC   ENDS
			      C 
			      C 
			      C ; segment partition block equates and structure
 = 0040			      C SEG_PARTENT_COUNT   EQU 64  ; number of entries 
			      C in segment partition block
 = 0041			      C SEG_PARTBLK_SIZE    EQU (4+SEG_PARTENT_COUNT*SEG
			      C _PARTENT_SIZE+12)/16    ; size of block in parag
			      C raphs
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 10 - 1


			      C 
			      C ; REFERENCE ONLY, block structure is not used (a
			      C llocations made dynamically)
 0410			      C SEG_PARTBLK_STRUC   STRUC
 0000  0000		      C     spbs_entry_count    DW  ?   ; count of used 
			      C entries in block
 0002  0000		      C     seg_partblk_ptr DW  ?   ; segment pointer to
			      C  next block
 0004  000C [		      C     spbs_filler DB  12 DUP (?)  ; unused, pads b
        00		      C lock size out to even paragraph
       ]
 0010  0400 [		      C     spbs_entry  DB  SEG_PARTENT_COUNT*SEG_PARTEN
        00		      C T_SIZE DUP (?)  ; space for segdef partition ent
       ]		      C ries
			      C SEG_PARTBLK_STRUC   ENDS
			      C 
			      C 
			      C ; pubdef block equates and structure
			      C ; make all block sizes a multiple of 16 bytes fo
			      C r allocate memory DOS function 48h
 = 0A0C			      C PUB_NAMELIST_SIZE   EQU (20*128+16-4)   ; allow 
			      C worst case of 20 entries in pubdef names block
 = 00A1			      C PUB_NAMBLK_SIZE EQU (PUB_NAMELIST_SIZE+4)/16    
			      C ; size of block in paragraphs
			      C 
			      C ; REFERENCE ONLY, block structure is not used (a
			      C llocations made dynamically)
 0A10			      C PUB_NAMBLK_STRUC    STRUC
 0000  0000		      C     pns_free    DW  ?       ; free name list spa
			      C ce in block
 0002  0000		      C     pdnameblk_ptr   DW  ?   ; segment of next bl
			      C ock, zero if none
 0004  0A0C [		      C     pns_namelist    DB  PUB_NAMELIST_SIZE DUP (?
        00		      C )   ; space for pubdef names
       ]
			      C PUB_NAMBLK_STRUC    ENDS
			      C 
			      C ; lnames logical name block equates and structur
			      C e
			      C ; make all block sizes a multiple of 16 bytes fo
			      C r allocate memory DOS function 48h
			      C ; * IMPORTANT LNAMES NAME LIST (lbs_namelist) NO
			      C TE *
			      C ;     each lnames block logical name entry consi
			      C sts of a low segment:offset pointer to
			      C ;     another entry or NULL, a high segment:offs
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 11 - 1


			      C et pointer to another entry or NULL,
			      C ;     and a variable length name
 = 055C			      C LNAMES_LIST_SIZE    EQU (10*(4+4+128)+16-4)   ; 
			      C allow worst case of 10 entries in lnames logical
			      C  names block
 = 0056			      C LNAMES_BLK_SIZE EQU (LNAMES_LIST_SIZE+4)/16 ; si
			      C ze of block in paragraphs
			      C 
			      C ; REFERENCE ONLY, block structure is not used (a
			      C llocations made dynamically)
 0560			      C LNAMES_BLK_STRUC    STRUC
 0000  0000		      C     lbs_free    DW  ?       ; free name list spa
			      C ce in block
 0002  0000		      C     lnamesblk_ptr   DW  ?   ; segment of next bl
			      C ock, zero if none
 0004  055C [		      C     lbs_namelist    DB  LNAMES_LIST_SIZE DUP (?)
        00		      C     ; space for lnames logical names, including 
       ]		      C hi/lo pointers
			      C LNAMES_BLK_STRUC    ENDS
			      C 
			      C 
			      C 
			      C ; group entry equates and structure
 = 0010			      C GRP_ENT_SIZE    EQU 16      ; size of an entry
			      C 
			      C ; REFERENCE ONLY, block structure is not used (a
			      C llocations made dynamically)
 0010			      C GRP_ENT_STRUC   STRUC
 0000  00000000		      C     ges_offset  DD  ?           ; offset from st
			      C art of program, start of group
 0004  0000		      C     ges_grp_nament_ptr  DW  ?   ; offset pointer
			      C  to group name in lnames block
 0006  0000		      C     ges_grp_namblk_ptr  DW  ?   ; segment pointe
			      C r to group name in lnames block
 0008  0000		      C     ges_grp_index   DW  ?       ; group index va
			      C lue
 000A  0006 [		      C     ges_filler  DB  6 DUP (?)   ; unused, pads e
        00		      C ntry size out to 16 bytes
       ]
			      C GRP_ENT_STRUC   ENDS
			      C 
			      C 
			      C ; group block equates and structure
 = 0010			      C GRP_ENT_COUNT   EQU 16      ; number of entries 
			      C in group block
 = 0011			      C GRP_BLK_SIZE    EQU (4+GRP_ENT_COUNT*GRP_ENT_SIZ
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 12 - 1


			      C E+12)/16    ; size of block in paragraphs
			      C 
			      C ; REFERENCE ONLY, block structure is not used (a
			      C llocations made dynamically)
 0110			      C GRP_BLK_STRUC   STRUC
 0000  0000		      C     gbs_entry_count DW  ?   ; count of used entr
			      C ies in block
 0002  0000		      C     grp_blk_ptr DW  ?       ; segment pointer to
			      C  next block
 0004  000C [		      C     gbs_filler  DB  12 DUP (?)  ; unused, pads b
        00		      C lock size out to even paragraph
       ]
 0010  0100 [		      C     gbs_entry   DB  GRP_ENT_COUNT*GRP_ENT_SIZE D
        00		      C UP (?)  ; space for group entries
       ]
			      C GRP_BLK_STRUC   ENDS
			      C 
			      C ; relocation entry block equates and structure
			      C ; compute REL_ITEM_COUNT so that block size is a
			      C n even paragraph including the 2 system informat
			      C ion words
 = 007F			      C REL_ITEM_COUNT  EQU 16*8-1  ; number of entries 
			      C in group block
 = 0004			      C REL_ITEM_SIZE   EQU 4       ; each relocation it
			      C em is 2 words long
 = 0020			      C REL_BLK_SIZE    EQU (4+REL_ITEM_COUNT*REL_ITEM_S
			      C IZE)/16    ; size of block in paragraphs
			      C 
			      C ; REFERENCE ONLY, block structure is not used (a
			      C llocations made dynamically)
 0200			      C REL_BLK_STRUC   STRUC
 0000  0000		      C     rbs_entry_count DW  ?   ; count of used entr
			      C ies in block
 0002  0000		      C     rel_blk_ptr DW  ?       ; segment pointer to
			      C  next block
 0004  01FC [		      C     rel_items   DB  REL_ITEM_COUNT*REL_ITEM_SIZE
        00		      C  DUP (?)    ; space for relocation items
       ]
			      C REL_BLK_STRUC   ENDS
			      C 
			      C 
			      C ; library module entry equates and structure
 = 0002			      C LIB_MODENT_SIZE   EQU 2     ; size of block in p
			      C aragraphs
			      C 
			      C ; REFERENCE ONLY, block structure is not used (a
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 13 - 1


			      C llocations made dynamically)
 0020			      C LIB_MODENT_STRUC STRUC
 0000  0000		      C     lms_lib_number  DW  ?   ; number of library 
			      C (current_lib at time of entry creation)
 0002  0000		      C     lms_page_number DW  ?   ; number of page whe
			      C re library module starts
 0004  0000		      C     lms_page_size   DW  ?   ; size of library pa
			      C ges
 0006  0000		      C     lms_mod_len     DW  ?   ; size of library mo
			      C dule (60K max if exceeded)
 0008  0000		      C     lms_ems_page1   DW  ?   ; first logical EMS 
			      C page of library module, if used
 000A  0000		      C     lms_ems_page2   DW  ?   ; second logical EMS
			      C  page of library module
 000C  0000		      C     lms_ems_page3   DW  ?   ; third logical EMS 
			      C page of library module
 000E  0000		      C     lms_ems_page4   DW  ?   ; fourth logical EMS
			      C  page of library module
 0010  0000		      C     lms_ems_buffptr DW  ?   ; start of buffer se
			      C gment in EMS pages
 0012  000C [		      C     lms_filler  DB  12 DUP (?)   ; filler to pad
        00		      C  entry out to full two paragraphs
       ]
 001E  0000		      C     lms_modent_ptr  DW  ?   ; segment pointer to
			      C  next block
			      C LIB_MODENT_STRUC ENDS
			      C 
			      C IFNDEF JUNIOR
			      C 
			      C ; overlaid public declarations block
 = 0040			      C OVLPUB_BLK_SIZE EQU 40h     ; size of block in p
			      C aragraphs
 = 0400			      C OVLPUB_BLK_BYSIZE   EQU 16*OVLPUB_BLK_SIZE  ; si
			      C ze of block in bytes
			      C 
 000E			      C OVLPUB_BLK_STRUC    STRUC
 0000  0000		      C     obs_blk_ptr     DW  ?   ; pointer to next ov
			      C erlaid public block
			      C 
			      C ; repeated sub-block
 0002  00		      C     obs_flag1       DB  ?   ; general use flag b
			      C efore all segment partition and public declarati
			      C on pointers
 0003  0000		      C     obs_segpart_ptr DW  ?   ; pointer to segment
			      C  partition entry owning following pubdefs
 0005  0000		      C     obs_near_pubcount   DW  ?   ; count of NEAR 
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 14 - 1


			      C referenced publics/total overlaid public referen
			      C ces
 0007  0000		      C     obs_far_pubcount    DW  ?   ; count of FAR r
			      C eferenced publics
 0009  0000		      C     obs_vect_count      DW  ?   ; running count 
			      C of vector bytes for nonoverlaid segment
			      C 
			      C ; repeated sub-sub-block
 000B  00		      C     obs_flag2       DB  ?   ; general use flag
 000C  0000		      C     obs_pubdecl_ptr DW  ?   ; pointer to overlai
			      C d public owned by preceding segment partition en
			      C try
			      C OVLPUB_BLK_STRUC    ENDS
			      C 
			      C ; data overlay block
 = 0100			      C DATA_OVLBLK_BYSIZE  EQU 2+126*2+2   ; next block
			      C  pointer, 126 word entries, word padding
 = 0010			      C DATA_OVLBLK_SIZE    EQU DATA_OVLBLK_BYSIZE/16
			      C 
			      C ENDIF
			      C 
				INCLUDE MLDATA.INC
			      C ;***********************************************
			      C **********************
			      C ;*   MLDATA.INC                                 
			      C                      *
			      C ;*                                              
			      C                      *
			      C ;*   By:            Michael Devore              
			      C                      *
			      C ;*   Date:          12/21/92                    
			      C                      *
			      C ;*   Model:         Small                       
			      C                      *
			      C ;*   Version:       2.5                         
			      C                      *
			      C ;*   Assembler:     MASM 5.0                    
			      C                      *
			      C ;*   Environment:   MS-DOS 2.x+                 
			      C                      *
			      C ;*                                              
			      C                      *
			      C ;*   External global data declarations          
			      C                      *
			      C ;*                                              
			      C                      *
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 15 - 1


			      C ;***********************************************
			      C **********************
			      C 
			      C ; DATA variables
			      C EXTERNDEF   is_args:BYTE
			      C EXTERNDEF   is_comfile:BYTE
			      C EXTERNDEF   is_mapfile:BYTE
			      C EXTERNDEF   is_mapexpand:BYTE
			      C EXTERNDEF   is_casesense:BYTE
			      C EXTERNDEF   is_ondisk:BYTE
			      C EXTERNDEF   is_inmem:BYTE
			      C EXTERNDEF   is_msextlib:BYTE
			      C EXTERNDEF   is_nodeflib:BYTE
			      C EXTERNDEF   is_dosseg:BYTE
			      C EXTERNDEF   is_dgroup:BYTE
			      C EXTERNDEF   is_inlib:BYTE
			      C EXTERNDEF   is_reload:BYTE
			      C EXTERNDEF   is_stackval:BYTE
			      C EXTERNDEF   is_maxparval:BYTE
			      C EXTERNDEF   is_nonuldosseg:BYTE
			      C EXTERNDEF   is_nowarn:BYTE
			      C EXTERNDEF   is_exit0:BYTE
			      C EXTERNDEF   is_beep:BYTE
			      C EXTERNDEF   is_linkinfo:BYTE
			      C EXTERNDEF   is_tempfile:BYTE
			      C EXTERNDEF	is_quick:BYTE
			      C EXTERNDEF	is_sympac:BYTE
			      C EXTERNDEF	is_ohp:BYTE
			      C EXTERNDEF	is_oht:BYTE
			      C EXTERNDEF	is_umb:BYTE
			      C EXTERNDEF	ems3_flag:BYTE
			      C EXTERNDEF   wrap_flag:BYTE
			      C EXTERNDEF   prev_flag:BYTE
			      C EXTERNDEF   eof_flag:BYTE
			      C 
			      C ; linker overlay and language specific related v
			      C alues
			      C IFNDEF JUNIOR
			      C EXTERNDEF   obj_ovl_flag:BYTE
			      C EXTERNDEF   ovl_ox_evar:BYTE
			      C EXTERNDEF   ovl_class:BYTE
			      C EXTERNDEF   exact_ovl_class:BYTE
			      C EXTERNDEF   ovl_pool:DWORD
			      C EXTERNDEF   ovl_mem_alloc:BYTE
			      C EXTERNDEF   ovl_max_load:WORD
			      C EXTERNDEF   ovl_max_load_size:WORD
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 16 - 1


			      C EXTERNDEF   ovl_stack:WORD
			      C EXTERNDEF   ovl_filename:BYTE
			      C EXTERNDEF   ovl_nopath:BYTE
			      C EXTERNDEF   ovl_count:WORD
			      C EXTERNDEF   ovl_handle:WORD
			      C EXTERNDEF   ovl_ioblk:WORD
			      C EXTERNDEF   seg_ovlclass:BYTE
			      C EXTERNDEF   ovlpub_array:WORD
			      C EXTERNDEF   ovl_reloc_array:WORD
			      C EXTERNDEF   lookup_tbl_array:WORD
			      C EXTERNDEF   ind_tbl_array:WORD
			      C EXTERNDEF   first_ovlpubblk_ptr:WORD
			      C EXTERNDEF   alloc_ovlpubblk_ptr:WORD
			      C EXTERNDEF   ovl_pubcount:WORD
			      C EXTERNDEF   lookup_tbl_segdef:WORD
			      C EXTERNDEF   ind_tbl_segdef:WORD
			      C EXTERNDEF   segcall_tbl_segdef:WORD
			      C EXTERNDEF   largest_ovl:WORD
			      C EXTERNDEF   second_ovl:WORD
			      C EXTERNDEF   ovl_code_id:WORD
			      C EXTERNDEF   ovl_data_id:WORD
			      C EXTERNDEF   data_ovlblk_ptr:WORD
			      C EXTERNDEF   nonovl_rvect:BYTE
			      C EXTERNDEF   is_anyovls:BYTE
			      C EXTERNDEF   is_clarion:BYTE
			      C EXTERNDEF   is_internal:BYTE
			      C EXTERNDEF   inc_padval:BYTE
			      C EXTERNDEF   is_clpinc:BYTE
			      C EXTERNDEF   is_clip5:BYTE
			      C EXTERNDEF   is_smartmem:BYTE
			      C EXTERNDEF   is_xms:BYTE
			      C EXTERNDEF   is_min_pool:BYTE
			      C EXTERNDEF   is_no_ems:BYTE
			      C EXTERNDEF   is_ems_ovlpool:BYTE
			      C EXTERNDEF   inc_seg_clcode:BYTE
			      C EXTERNDEF   tmp_in_emsxms:BYTE
			      C EXTERNDEF   tmp_in_xms:BYTE
			      C EXTERNDEF   _dt_seg_size:WORD
			      C EXTERNDEF   _dat_seg_size:WORD
			      C EXTERNDEF   _dt_seg_index:WORD
			      C EXTERNDEF   _dat_seg_index:WORD
			      C EXTERNDEF   ems_handle:WORD
			      C EXTERNDEF   ems_base:WORD
			      C EXTERNDEF   ems_pagecount:WORD
			      C EXTERNDEF   ems_currmap:WORD
			      C EXTERNDEF   ems_page_avail:WORD
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 17 - 1


			      C EXTERNDEF   xms_addr:DWORD
			      C EXTERNDEF   is_ddl:BYTE
			      C EXTERNDEF   use_ddl:BYTE
			      C EXTERNDEF   any_ddl:BYTE
			      C EXTERNDEF   ddldat_filename:BYTE
			      C EXTERNDEF   is_xtstash:BYTE
			      C EXTERNDEF   is_xpstash:BYTE
			      C EXTERNDEF   udl_proc_pass:BYTE
			      C EXTERNDEF	ovl_ohp_size:WORD
			      C EXTERNDEF	ovl_oht_size:WORD
			      C EXTERNDEF	ovl_ohp_alloc:BYTE
			      C EXTERNDEF	ovl_oht_alloc:BYTE
			      C ENDIF
			      C 
			      C EXTERNDEF   warn_count:WORD
			      C EXTERNDEF   obj_count:WORD
			      C EXTERNDEF   lib_count:WORD
			      C EXTERNDEF   module_count:WORD
			      C EXTERNDEF   seg_count:WORD
			      C EXTERNDEF   segdef_count:WORD
			      C EXTERNDEF   current_obj:WORD
			      C EXTERNDEF   current_lib:WORD
			      C EXTERNDEF   number_reloc:WORD
			      C EXTERNDEF   communal_count:WORD
			      C EXTERNDEF   stack_value:WORD
			      C EXTERNDEF   maxpar_value:WORD
			      C 
			      C EXTERNDEF   pub_sym_count:DWORD
			      C EXTERNDEF   tot_sym_count:DWORD
			      C EXTERNDEF   highest_exe_write:DWORD
			      C                  
			      C EXTERNDEF   first_objblk_ptr:WORD
			      C EXTERNDEF   last_objblk_ptr:WORD
			      C EXTERNDEF   first_libblk_ptr:WORD
			      C EXTERNDEF   last_libblk_ptr:WORD
			      C EXTERNDEF   first_pdeclblk_ptr:WORD
			      C EXTERNDEF   first_cdeclblk_ptr:WORD
			      C EXTERNDEF   alloc_pdeclblk_ptr:WORD
			      C EXTERNDEF   alloc_cdeclblk_ptr:WORD
			      C EXTERNDEF   alloc_pdnameblk_ptr:WORD
			      C EXTERNDEF   alloc_lnamesblk_ptr:WORD
			      C EXTERNDEF   first_segdefblk_ptr:WORD
			      C EXTERNDEF   alloc_segdefblk_ptr:WORD
			      C EXTERNDEF   first_segpartblk_ptr:WORD
			      C EXTERNDEF   alloc_segpartblk_ptr:WORD
			      C EXTERNDEF   first_grpblk_ptr:WORD
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 18 - 1


			      C EXTERNDEF   alloc_grpblk_ptr:WORD
			      C EXTERNDEF   first_relblk_ptr:WORD
			      C EXTERNDEF   alloc_relblk_ptr:WORD
			      C EXTERNDEF   first_libent_ptr:WORD
			      C EXTERNDEF   alloc_libent_ptr:WORD
			      C ;***EXTERNDEF   first_local_ptr:WORD
			      C EXTERNDEF   first_fixblk_ptr:WORD
			      C EXTERNDEF   alloc_fixblk_ptr:WORD
			      C EXTERNDEF   first_binblk_ptr:WORD
			      C EXTERNDEF   alloc_binblk_ptr:WORD
			      C EXTERNDEF   _edata_pubaddr:WORD
			      C EXTERNDEF   _end_pubaddr:WORD
			      C EXTERNDEF   _edata_segaddr:WORD
			      C EXTERNDEF   _end_segaddr:WORD
			      C 
			      C EXTERNDEF   exe_name:BYTE
			      C EXTERNDEF   map_name:BYTE
			      C 
			      C EXTERNDEF   pubdecl_hash:WORD
			      C EXTERNDEF   segdef_hash:WORD
			      C EXTERNDEF   zero_table:WORD
			      C 
			      C EXTERNDEF   lnames_hash:DWORD
			      C 
			      C ; DATA? variables
			      C EXTERNDEF   ctrlbreak:BYTE
			      C EXTERNDEF   dos_version:BYTE
			      C 
			      C EXTERNDEF   psp:WORD
			      C EXTERNDEF   image_handle:WORD
			      C EXTERNDEF   image_mem_ptr:WORD
			      C EXTERNDEF   map_handle:WORD
			      C EXTERNDEF   memory_blk_base:WORD
			      C EXTERNDEF   memory_blk_size:WORD
			      C EXTERNDEF   memory_blk_end:WORD
			      C EXTERNDEF   allocation_base:WORD
			      C EXTERNDEF   allocation_top:WORD
			      C EXTERNDEF   buffer_base:WORD
			      C EXTERNDEF   buffer_end:WORD
			      C EXTERNDEF   buffer_head:WORD
			      C EXTERNDEF   buffer_tail:WORD
			      C EXTERNDEF   buffer_size:WORD
			      C EXTERNDEF   read_buff_ptr:WORD
			      C EXTERNDEF   prev_read_ptr:WORD
			      C EXTERNDEF   prev_rec_len:WORD
			      C EXTERNDEF   current_lnames:WORD
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 19 - 1


			      C EXTERNDEF   current_extdef:WORD
			      C EXTERNDEF   current_segdef:WORD
			      C EXTERNDEF   current_grpdef:WORD
			      C EXTERNDEF   eof_pos:WORD
			      C EXTERNDEF   data_fixup_count:WORD
			      C EXTERNDEF   stack_segval:WORD
			      C EXTERNDEF   stack_offval:WORD
			      C EXTERNDEF   entry_segval:WORD
			      C EXTERNDEF   entry_offval:WORD
			      C EXTERNDEF   master_segblk:WORD
			      C EXTERNDEF   ovl_filepos_blk:WORD
			      C 
			      C EXTERNDEF   image_size:DWORD
			      C EXTERNDEF   file_pos_adj:DWORD
			      C EXTERNDEF   prev_pos_adj:DWORD
			      C EXTERNDEF   lib_pos_adj:DWORD
			      C 
			      C EXTERNDEF   cmd_line:BYTE
			      C EXTERNDEF   prev_libname:BYTE
			      C EXTERNDEF   tmod_name:BYTE
			      C EXTERNDEF   ovl_class_name:BYTE
			      C 
			      C EXTERNDEF   frame_thrd_meth:BYTE
			      C EXTERNDEF   target_thrd_meth:BYTE
			      C 
			      C EXTERNDEF   seg_partent_indptr:WORD
			      C EXTERNDEF   seg_defent_indptr:WORD
			      C EXTERNDEF   grp_ent_indptr:WORD
			      C EXTERNDEF   ext_defent_indptr:WORD
			      C EXTERNDEF   lib_page_storage:WORD
			      C EXTERNDEF   env_opt_storage:BYTE
			      C EXTERNDEF   data_fixup_flag:WORD
			      C EXTERNDEF   ddl_hold_buff:WORD
			      C EXTERNDEF   frame_thrd_index:WORD
			      C EXTERNDEF   target_thrd_index:WORD
			      C 
			      C EXTERNDEF   lnames_ent_indptr:DWORD
			      C EXTERNDEF   ddl_symbol_lookup:DWORD
			      C EXTERNDEF   lib_id:DWORD
			      C 
				INCLUDE MLERRMES.INC
			      C ;***********************************************
			      C **********************
			      C ;*   MLERRMES.INC                               
			      C                      *
			      C ;*                                              
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 20 - 1


			      C                      *
			      C ;*   By:            Michael Devore              
			      C                      *
			      C ;*   Date:          02/10/93                    
			      C                      *
			      C ;*   Model:         Small                       
			      C                      *
			      C ;*   Version:       2.5                         
			      C                      *
			      C ;*   Assembler:     MASM 5.0                    
			      C                      *
			      C ;*   Environment:   MS-DOS 2.x+                 
			      C                      *
			      C ;*                                              
			      C                      *
			      C ;*   Error message feedback strings with lookup 
			      C table                *
			      C ;*   Data space is only allocated if ALLOCATE_ER
			      C ROR_DATA is defined  *
			      C ;*                                              
			      C                      *
			      C ;***********************************************
			      C **********************
			      C 
			      C PAGE    50,80
			      C      
			      C ;*****************************
			      C ;* Constant data             *
			      C ;*****************************
			      C 
 0000			      C .CONST
			      C 
 = 004A			      C HIGH_ERR_CODE   EQU 74      ; highest error code
			      C 
			      C ;***********************************************
			      C ******************************
			      C 
			      C ; equates and address table for error/warning fe
			      C edback
			      C ; four word values per entry
			      C ; first word flags the type of error using the f
			      C ollowing table
			      C ;   bit     value   type of feedback
			      C ;   ---     -----   ----------------
			      C ;    0        0     warning [0]
			      C ;    0        1     fatal [1]
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 21 - 1


			      C ;   2,1      0,0    unknown error [0]
			      C ;   2,1      0,1    internal error [2]
			      C ;   2,1      1,0    command line (user) error [4
			      C ]
			      C ;   2,1      1,1    error in file [6]
			      C ;   4,3      0,0    no error value given [0]
			      C ;   4,3      0,1    8-bit error value [8]
			      C ;   4,3      1,0    16-bit error value [10h]
			      C ;   4,3      1,1    no offset or error value for
			      C  file [18h]
			      C ;    5        0     non-DOS error
			      C ;    5        1     DOS error
			      C ;    6        1     Unspecified fatal error
			      C ; second word is offset to the problem message
			      C ; third word is offset to the cause of the probl
			      C em, i.e. user, machlink, dos, software
			      C ; fourth word is offset to the solution message
			      C 
			      C ; error type equates
 = 0000			      C WARNING_ERRVAL  EQU 0
 = 0001			      C FATAL_ERRVAL    EQU 1
 = 0000			      C UNKNOWN_ERRVAL  EQU 0
 = 0002			      C INTERNAL_ERRVAL EQU 2
 = 0004			      C COMMAND_ERRVAL  EQU 4
 = 0006			      C FILE_ERRVAL     EQU 6
 = 0000			      C NOVAL_ERRVAL    EQU 0
 = 0008			      C BIT8_ERRVAL     EQU 8
 = 0010			      C BIT16_ERRVAL    EQU 16
 = 0018			      C NO_OFF_ERRVAL   EQU 24
 = 0020			      C DOS_ERRVAL      EQU 32
 = 0040			      C NOSPEC_ERRVAL   EQU 64
			      C 
			      C ; error name equates and address table
 = 0000			      C INTERNAL_ERR        EQU 0           ; machlink i
			      C nternal error
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
			      C IFNDEF JUNIOR
			      C 
 = 0001			      C UNM_LEFT_PAREN_ERR  EQU 1           ; unmatched 
			      C left parenthesis
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 22 - 1


			      C 
 = 0002			      C UNM_RIGHT_PAREN_ERR EQU 2           ; unmatched 
			      C right parenthesis
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0003			      C NEST_PAREN_ERR  EQU 3               ; unmatched 
			      C right parenthesis
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
			      C ELSE
			      C ENDIF
			      C 
 = 0004			      C UNKNOWN_ERR     EQU 4               ; unknown er
			      C ror
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0005			      C BAD_OPTION_ERR  EQU 5               ; bad linker
			      C  option
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0006			      C BAD_RECTYPE_ERR EQU 6               ; bad record
			      C  type
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0007			      C MULT_THEADR_ERR EQU 7               ; more than 
			      C one THEADR record
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0008			      C GRPDEF_VAL_ERR  EQU 8               ; GRPDEF ind
			      C ex value too large
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 23 - 1


 = 0009			      C SEGDEF_VAL_ERR  EQU 9               ; SEGDEF ind
			      C ex value too large
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 000A			      C UNEXPECT_EOF_ERR    EQU 10          ; unexpected
			      C  end of file error
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 000B			      C INV_DSTYPE_ERR  EQU 11              ; invalid da
			      C ta segment type value
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 000C			      C INV_COMFIELD_VAL_ERR    EQU 12      ; invalid co
			      C mmunal length field value
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 000D			      C LNAMES_COUNT_ERR    EQU 13          ; too many L
			      C NAMES logical names in file
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 000E			      C GRPIND_VAL_ERR    EQU 14            ; Invalid GR
			      C PDEF group name index value
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 000F			      C SEGNAM_IND_ERR    EQU 15            ; Invalid SE
			      C GDEF segment name index value
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0010			      C CLASSNAM_IND_ERR    EQU 16          ; Invalid SE
			      C GDEF class name index value
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 24 - 1


			      C ENDIF
			      C 
 = 0011			      C COMBINE_VAL_ERR EQU 17              ; Invalid SE
			      C GDEF combine field value
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0012			      C SEGMENT_LEN_ERR EQU 18              ; segment si
			      C ze exceeds 64K
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0013			      C NO_OBJMOD_ERR   EQU 19              ; no object 
			      C modules were specified
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0014			      C STACK_SIZE_ERR  EQU 20              ; stack segm
			      C ent larger than 65534 bytes
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0015			      C COM_STACK_ERR   EQU 21              ; COM file c
			      C ontains stack segment
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0016			      C COM_FIXUP_ERR   EQU 22              ; COM file h
			      C as segment-relative fixups
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0017			      C COM_SIZE_ERR    EQU 23              ; COM file i
			      C s greater than 64K
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0018			      C EXTDEF_COUNT_ERR    EQU 24          ; too many e
			      C xternal names
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 25 - 1


			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0019			      C ENDDAT_VAL_ERR  EQU 25              ; bad enddat
			      C  field value in MODEND record
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 001A			      C LOC_VAL_ERR EQU 26                  ; bad loc fi
			      C eld value in FIXUPP record
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 001B			      C EXTDEF_VAL_ERR  EQU 27              ; EXTDEF ind
			      C ex value too large
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 001C			      C INV_THRD_METH_ERR   EQU 28          ; invalid th
			      C read method field value
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 001D			      C IMAGE_BOUNDS_ERR    EQU 29          ; attempt to
			      C  write data outside of program bounds
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 001E			      C RELOC_COUNT_ERR EQU 30              ; more than 
			      C 32768 relocation table entries
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 001F			      C IDATA_BLK_SIZE_ERR  EQU 31          ; LIDATA ite
			      C rated data block larger than 512 bytes
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 26 - 1


 = 0020			      C FIXUPP_DATA_ERR EQU 32              ; FIXUPP rec
			      C ords contains a fixup field without preceding L?
			      C DATA record
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0021			      C RSP_LINE_ERR    EQU 33              ; response f
			      C ile line too long
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0022			      C RSP_NEST_ERR    EQU 34              ; attempt to
			      C  nest response files
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0023			      C SEG_GRP_CONF_ERR    EQU 35          ; PUBDEF gro
			      C up and segment index values conflict
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0024			      C DOS_FILE_FND_ERR    EQU 36          ; DOS file n
			      C ot found error
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0025			      C DOS_PATH_FND_ERR    EQU 37          ; DOS path n
			      C ot found error
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0026			      C DOS_OUT_HAND_ERR    EQU 38          ; DOS out of
			      C  file handles error
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0027			      C DOS_ACC_DEN_ERR     EQU 39          ; DOS access
			      C  denied error
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 27 - 1


			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0028			      C DOS_INV_HAND_ERR    EQU 40          ; DOS invali
			      C d handle error
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0029			      C DOS_MCB_DSTRY_ERR   EQU 41          ; DOS memory
			      C  control blocks destroyed error
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 002A			      C DOS_INSUF_MEM_ERR   EQU 42          ; DOS insuff
			      C icient memory error
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 002B			      C DOS_INV_MEM_BLK_ERR EQU 43          ; DOS invali
			      C d memory block error
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 002C			      C NO_EXE_STACK_WARN   EQU 44          ; warning, n
			      C o stack for .EXE file
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 002D			      C UNRES_EXT_WARN  EQU 45              ; warning, u
			      C nresolved external
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 002E			      C MULT_DEF_SYM_WARN   EQU 46          ; warning, m
			      C ultiply defined symbol
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 002F			      C FIXUP_OVRFLW_WARN   EQU 47          ; warning, f
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 28 - 1


			      C ixup overflow
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0030			      C SEG_GRP_DECL_WARN   EQU 48          ; segment de
			      C clared in more than one group
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0031			      C COM_ENTRY_ERR   EQU 49              ; COM file c
			      C ontains bad entry point
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0032			      C SELF_REL_FIX_ERR    EQU 50          ; intersegme
			      C nt self-relative fixup
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0033			      C LIB_FORMAT_ERR  EQU 51              ; library fo
			      C rmat error
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0034			      C FRAME_THRD_ERR  EQU 52              ; bad frame 
			      C thread field value in FIXUPP record
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0035			      C FRAME_METH_ERR  EQU 53              ; bad frame 
			      C method in FIXUPP record
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0036			      C TARGET_METH_ERR EQU 54              ; bad target
			      C  method in FIXUPP record
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 29 - 1


			      C 
 = 0037			      C ENDFRAME_THRD_ERR   EQU 55          ; bad frame 
			      C thread field value in MODEND record
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0038			      C COMM_OVRFLW_ERR EQU 56              ; communal v
			      C ariable length overflow
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0039			      C DEF_SEG_OVRFLW_ERR  EQU 57          ; default da
			      C ta segment overflow (due to communals)
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 003A			      C DISK_FULL_ERR   EQU 58              ; disk full 
			      C error
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 003B			      C TMP_DISK_FULL_ERR   EQU 59          ; disk speci
			      C fied by TMP variable is full
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
			      C IFNDEF JUNIOR
			      C 
 = 003C			      C OVLSEG_LEN_ERR  EQU 60              ; overlaid s
			      C egment size exceeds 64K
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 003D			      C ROOTSEG_LEN_ERR EQU 61              ; overlay ro
			      C ot segment size exceeds 64K
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 003E			      C OVERLAY_COUNT_ERR   EQU 62          ; more than 
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 30 - 1


			      C 16383 overlays
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 003F			      C OVLCOM_CLASH_ERR    EQU 63          ; COM files 
			      C clash with overlays
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0040			      C OVLPUB_COUNT_ERR    EQU 64          ; more than 
			      C 4095 publics of overlay class
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0041			      C MISSING_OVLMGR_ERR  EQU 65          ; OVLMGR.OBJ
			      C  missing
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0042			      C OVL_MOD_PUB_MAX_ERR EQU 66          ; More than 
			      C 255 overlaid publics in one overlay
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0043			      C NONOVL_SEG_WARN EQU 67              ; warning, n
			      C onoverlayable segment reference
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0044			      C NONOVL_SYM_WARN EQU 68              ; warning, n
			      C onoverlayable symbol reference
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0045			      C NONCONT_OVLDATA_ERR EQU 69          ; noncontigu
			      C ous overlay class segment binary data in overlay
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 31 - 1


			      C 
 = 0046			      C EMS_EMM_ERR EQU 70                  ; expanded m
			      C emory manager error
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0047			      C XMS_XMM_ERR EQU 71                  ; extended m
			      C emory manager error
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0048			      C COMCONFLICT_ERR EQU 72              ; /c linker 
			      C option conflicts with /ddl, /udl
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 0049			      C DDLMOD_COUNT_ERR    EQU 73          ; more than 
			      C 1024 modules in DDL
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
 = 004A			      C SYMBOLTOKEN_ERR	EQU 74          	; bad Cl
			      C ipper symbol token
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate jumptable space once
			      C ENDIF
			      C 
			      C ELSE
			      C ENDIF
			      C 
			      C ;***********************************************
			      C ******************************
			      C 
			      C IFDEF   ALLOCATE_ERROR_DATA         ; only alloc
			      C ate message space once
			      C ENDIF
			      C 
				
				;*****************************
				;* Public declarations       *
				;*****************************
				
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 32 - 1


				PUBLIC  exit_link
				
				;*****************************
				;* Data begins               *
				;*****************************
				
				;*****************************
				;   Initialized data         *
				;*****************************
				
 0000				.DATA
				
				;*****************************
				;* External declarations     *
				;*****************************
				
				; variables
				EXTRN   mod_alloc_base:WORD
				EXTRN	writing_qlk_flag:BYTE
				
				; linker defaults, byte values
 0000 00			is_args         DB  0       ; nonzero if argumen
				ts passed to linker
 0001 00			is_comfile      DB  0       ; nonzero if .COM fi
				le creation indicated
 0002 00			is_mapfile      DB  0       ; nonzero if .MAP fi
				le creation indicated
 0003 00			is_mapexpand    DB  0       ; nonzero if expande
				d .MAP file indicated
 0004 00			is_casesense    DB  0       ; nonzero if symbol 
				names are case sensitive
 0005 00			is_ondisk       DB  0       ; nonzero if program
				 image in temporary disk file
 0006 00			is_inmem        DB  0       ; nonzero if program
				 image is in memory
 0007 00			is_msextlib     DB  0       ; nonzero if use ext
				ended ms lib format
 0008 00			is_nodeflib     DB  0       ; nonzero if no defa
				ult libraries
 0009 00			is_dosseg       DB  0       ; nonzero if DOSSEG 
				segment ordering specified
 000A 00			is_nonuldosseg  DB  0       ; nonzero if option 
				/non is set
 000B 00			is_stackval     DB  0       ; nonzero if stack s
				ize set by /st option
 000C 00			wrap_flag       DB  0       ; nonzero if read fr
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 33 - 1


				om file buffer wraps to beginning of buffer
 000D 00			prev_flag       DB  0       ; nonzero if keeping
				 previously read record (pass 2 L?DATA record pr
				ior to fixup)
 000E 00			eof_flag        DB  0       ; nonzero if end of 
				file was encountered loading file buffer
 000F 00			is_dgroup       DB  0       ; nonzero if DGROUP 
				group encountered
 0010 00			is_inlib        DB  0       ; nonzero if current
				ly processing LIB file
 0011 00			is_anyovls      DB  0       ; nonzero if any ove
				rlaid modules were specified
 0012 00			is_reload       DB  0       ; nonzero if reload 
				active but swapped out overlays
 0013 00			is_maxparval    DB  0       ; maximum paragraph 
				allocation specified
 0014 00			is_nowarn       DB  0       ; nonzero if warning
				s disabled
 0015 00			is_exit0        DB  0       ; nonzero if warning
				s generate exit code of 0
 0016 00			is_beep         DB  0       ; nonzero if beep on
				 exit
 0017 00			is_linkinfo     DB  0       ; nonzero if print l
				inker info
 0018 00			is_tempfile     DB  0       ; nonzero if tempora
				ry file name specified
 0019 01			is_no_ems       DB  1       ; default is set, no
				nzero if don't use available EMS during link
 001A 00			is_ems_ovlpool  DB  0       ; nonzero if EMS use
				d for overlay pool
 001B 00			is_internal     DB  0       ; nonzero if interna
				l overlays specified
 001C 00			is_clarion      DB  0       ; clarion overlays s
				pecified
 001D 00			is_smartmem     DB  0       ; nonzero if using S
				MARTMEM.XXX functions
 001E 00			is_clpinc       DB  0       ; nonzero if Clipper
				 incremental link
 001F 30			inc_padval      DB  48      ; pad value to add t
				o segments for incremental link
 0020 00			is_clip5        DB  0       ; zero if Clipper 5 
				overlays specified
 0021 00			tmp_in_emsxms   DB  0       ; nonzero if tempora
				ry file image is in EMS/XMS
 0022 00			tmp_in_xms      DB  0       ; nonzero if tempora
				ry file image in XMS only
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 34 - 1


 0023 00			is_xms          DB  0       ; nonzero if XMS pre
				sent and available
 0024 00			is_min_pool     DB  0       ; nonzero if minimum
				 pool specified through op:m option
 0025 00			is_ddl          DB  0       ; nonzero if creatin
				g DDL
 0026 00			use_ddl         DB  0       ; nonzero if using D
				DL(s)
 0027 00			any_ddl         DB  0       ; nonzero if creatin
				g OR using DDL(s)
 0028 00			is_xtstash      DB  0       ; nonzero if stashin
				g swapped overlays in extended memory (/ort)
 0029 00			is_xpstash      DB  0       ; nonzero if stashin
				g swapped overlays in EMS 4.0 (/orp)
 002A 00			is_quick        DB  0       ; nonzero if QuickLi
				nker option set (/ql)
 002B 00			is_sympac       DB  0       ; nonzero if automat
				ic symbol table compaction for Clipper
 002C 00			is_ohp          DB  0       ; nonzero if ohp opt
				ion used
 002D 00			is_oht          DB  0       ; nonzero if oht opt
				ion used
 002E 00			is_umb          DB  0       ; nonzero if UMB ove
				rlay option (/ou) used
 002F 00			ems3_flag       DB  0       ; nonzero if explici
				t EMS 3.0 compatibility specified for /ohp
				
				; linker defaults, word values
				EVEN
 0030 0000			stack_value     DW  0       ; stack size set by 
				/st option
 0032 0000			maxpar_value    DW  0       ; maximum paragraph 
				allocation set by /pa option
 0034 0000			warn_count      DW  0       ; count of warning m
				essages
 0036 0000			obj_count       DW  0       ; count of object mo
				dules
 0038 0000			lib_count       DW  0       ; count of libraries
 003A 0000			module_count    DW  0       ; count of all modul
				es linked, object and library
 003C 0000			seg_count       DW  0       ; count of all discr
				ete (after combined) segments in all object modu
				les
 003E 0000			segdef_count    DW  0       ; count of all diffe
				rent segments
 0040 0000			current_obj     DW  0       ; current object mod
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 35 - 1


				ule
 0042 0000			current_lib     DW  0       ; current library
 0044 0000			number_reloc    DW  0       ; number of relocati
				on items in .EXE header
 0046 0000			communal_count  DW  0       ; count of communal 
				variables
 0048 0000			stack_segval    DW  0       ; program's initial 
				stack segment (SS) value
 004A 0000			stack_offval    DW  0       ; program's initial 
				stack pointer (SP) value
 004C 0000			entry_segval    DW  0       ; program's initial 
				code segment (CS) value
 004E 0000			entry_offval    DW  0       ; program's initial 
				instruction pointer (IP) value
				
				; linker defaults, doubleword values
 0050 00000000			pub_sym_count   DD  0       ; count of all publi
				c symbols
 0054 00000000			tot_sym_count   DD  0       ; count of all symbo
				ls
 0058 00000000			highest_exe_write   DD  0   ; value of highest w
				rite for beginning of program
				
				; linker defaults, overlay related values
				IFNDEF JUNIOR
 005C  0020 [			ovl_ox_evar DB  32 DUP (0)  ; /ox environment va
        00			riable setting
       ]
 007C 43 4F 44 45 00		ovl_class   DB  'CODE',0,123 DUP (0)    ; overla
       007B [			y class name
        00
       ]
 00FC 00			exact_ovl_class DB  0       ; nonzero if exact o
				verlay class
				EVEN
 00FE 00024000			ovl_pool    DD  147456      ; overlay pool size,
				 user set maximum 512K
 0102 0200			ovl_ohp_size	DW	512		; overla
				y expanded file stash amount in K
 0104 0000			ovl_oht_size	DW	0		; overla
				y extended file stash amount in K
 0106 00			ovl_mem_alloc   DB  0       ; zero if overlay po
				ol is free memory, nonzero if allocated memory
 0107 00			udl_proc_pass   DB  0       ; 0 if not creating 
				a LIB'ed UDL, 1 if first pass, 2 if second
 0108 00			ovl_ohp_alloc	DB	0		; zero i
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 36 - 1


				f overlay stash amount in expanded is free, nonz
				ero if allocated
 0109 00			ovl_oht_alloc	DB	0		; zero i
				f overlay stash amount in extended is free, nonz
				ero if allocated
				EVEN
 010A 0060			ovl_max_load    DW  96     	; maximum number
				 of loaded overlays, user set maximum 512
 010C 0600			ovl_max_load_size   DW  96*16	; size of array 
				for loaded overlay (ovl_max_load*16)
 010E 0800			ovl_stack   DW  2048        ; overlay stack size
				, user set maximum 63K
 0110 0000			ovl_count   DW  0           ; count of overlays
 0112 0000			ovl_pubcount    DW  0       ; count of overlaid 
				publics
				;ddldat_filename LABEL   BYTE    ; name of DAT f
				ile for DDL file to read
				;ovl_filename    DB  128 DUP (0) ; name of overl
				ay file, including .OVL extension and path
				;ovl_nopath  DB  128 DUP (0) ; name of overlay f
				ile WITHOUT prepended path (if any)
 0114 0000			first_ovlpubblk_ptr DW  0   ; segment of first o
				verlaid public declarations block
 0116 0000			alloc_ovlpubblk_ptr DW  0   ; segment of last al
				located overlaid public declarations block
 0118 0000			largest_ovl DW  0           ; size of largest ov
				erlay
 011A 0000			second_ovl  DW  0           ; size of second lar
				gest overlay
 011C 0000			ovl_code_id DW  0           ; overlay code segme
				nt identifier, for writing L?DATA segments
 011E 0000			ovl_data_id DW  0           ; overlay data segme
				nt identifier, for writing Clarion _DT and _DAT 
				LEDATA segments
 0120 0000			ovl_handle  DW  0           ; handle of .OVL ove
				rlay file
 0122 0000			data_ovlblk_ptr DW  0       ; segment of first d
				ata overlay block
 0124 0000			ems_handle  DW  0           ; handle of EMS bloc
				ks used by WarpLink
 0126  0004 [			ems_currmap DW  4 DUP (-1)  ; current logical pa
        FFFF			ge mapping of EMS physical pages
       ]
				ENDIF
				
 012E 15			stpass_len      DB  stpass_stop-stpass_text
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 37 - 1


 012F 0D 0A 2A 2A 2A 20		stpass_text     DB  CR,LF,'*** Start of pass '
       53 74 61 72 74 20
       6F 66 20 70 61 73
       73 20
 0143 31			stpass_num      DB  '1'
 0144 = 0144			stpass_stop     =   $
				
 0144 13			endpass_len     DB  endpass_stop-endpass_text
 0145 0D 0A 2A 2A 2A 20		endpass_text    DB  CR,LF,'*** End of pass '
       45 6E 64 20 6F 66
       20 70 61 73 73 20
 0157 31			endpass_num     DB  '1'
 0158 = 0158			endpass_stop    =   $
				EVEN
				
				; zero initialized segment word pointers to vari
				ous control blocks
				
 0158 0000			first_objblk_ptr    DW  0   ; segment of first o
				bject module name block
 015A 0000			last_objblk_ptr     DW  0   ; segment of last ob
				ject module name block
 015C 0000			first_libblk_ptr    DW  0   ; segment of first l
				ibrary block
 015E 0000			last_libblk_ptr     DW  0   ; segment of last li
				brary block
 0160 0000			first_pdeclblk_ptr  DW  0   ; segment of first a
				llocated pubdef declaration block
 0162 0000			first_cdeclblk_ptr  DW  0   ; segment of first a
				llocated comdef declaration block
 0164 0000			alloc_pdeclblk_ptr  DW  0   ; segment of last al
				located pubdef declaration block
 0166 0000			alloc_cdeclblk_ptr  DW  0   ; segment of last al
				located comdef declaration block
 0168 0000			alloc_pdnameblk_ptr DW  0   ; segment of last al
				located pubdef names block
 016A 0000			alloc_lnamesblk_ptr DW  0   ; segment of last al
				located lnames logical names block
 016C 0000			first_segdefblk_ptr DW  0   ; segment of first a
				llocated segdef block
 016E 0000			alloc_segdefblk_ptr DW  0   ; segment of last al
				located segdef block
 0170 0000			first_grpblk_ptr    DW  0   ; segment of first a
				llocated group block
 0172 0000			alloc_grpblk_ptr    DW  0   ; segment of last al
				located group block
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 38 - 1


 0174 0000			first_segpartblk_ptr    DW  0   ; segment of fir
				st allocated segment partition block
 0176 0000			alloc_segpartblk_ptr    DW  0   ; segment of las
				t allocated segment partition block
 0178 0000			first_relblk_ptr    DW  0   ; pointer to first a
				llocated relocation table block
 017A 0000			alloc_relblk_ptr    DW  0   ; pointer to last al
				located relocation table block
 017C 0000			first_libent_ptr    DW  0   ; pointer to first a
				llocated library module entry
 017E 0000			alloc_libent_ptr    DW  0   ; pointer to last al
				located library module entry
				;***first_local_ptr     DW  0   ; pointer to fir
				st allocated local declaration
 0180 0000			first_fixblk_ptr    DW  0   ; pointer to first a
				llocated fixup block (for DDL)
 0182 0000			alloc_fixblk_ptr    DW  0   ; pointer to last al
				located fixup block (for DDL)
 0184 0000			first_binblk_ptr    DW  0   ; pointer to first a
				llocated binary block (for DDL)
 0186 0000			alloc_binblk_ptr    DW  0   ; pointer to last al
				located binary block (for DDL)
				; used only if DOSSEG switch set
 0188 0000			_edata_pubaddr  DW  0       ; address of public 
				declaration entry of _edata
 018A 0000			_end_pubaddr    DW  0       ; address of public 
				declaration entry of _end
 018C 0000			_edata_segaddr  DW  0       ; address of BSS seg
				ment's segdef entry that _edata points to
 018E 0000			_end_segaddr    DW  0       ; address of STACK s
				egment's segdef entry that _end points to
				
				;*****************************
				;   Uninitialized data       *
				;*****************************
				
 0000				.DATA?
				
				; zero init'ed character or byte strings
				EVEN
 0000  0080 [			exe_name    DB  128 DUP (?) ; executable file na
        00			me, including any path
       ]
				EVEN
 0080  0080 [			map_name    DB  128 DUP (?) ; map file name, inc
        00			luding any path
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 39 - 1


       ]
				
 0100				ddldat_filename LABEL   BYTE    ; name of DAT fi
				le for DDL file to read
 0100  0080 [			ovl_filename    DB  128 DUP (?) ; name of overla
        00			y file, including .OVL extension and path
       ]
 0180  0080 [			ovl_nopath  DB  128 DUP (?) ; name of overlay fi
        00			le WITHOUT prepended path (if any)
       ]
				
				EVEN
				; word arrays
 0200  0400 [			pubdecl_hash    DW  HASH_ARRAY_SIZE DUP (?) ; ha
        0000			shed pointers to public declaration entries
       ]
 0A00  0400 [			segdef_hash     DW  HASH_ARRAY_SIZE DUP (?) ; ha
        0000			shed pointers to segdef entries
       ]
 1200  0100 [			zero_table  DW  256 DUP (?) ; table of 512-byte 
        0000			page of zeros
       ]
				
				; doubleword arrays
 1400  0400 [			lnames_hash     DD  HASH_ARRAY_SIZE DUP (?) ; ha
        00000000		shed pointers to lnames logical name entries
       ]
				
				;.DATA?
				
				; byte values
				EVEN                        ; maximize speed on 
				8086 and better
 2400 00			ctrlbreak   DB  ?           ; status of Ctrl-Bre
				ak checking
				EVEN
 2402 00			dos_version DB  ?           ; major version numb
				er of DOS
				EVEN
 2404 00			obj_ovl_flag    DB  ?       ; nonzero if object 
				module is in an overlay
				
				IFNDEF JUNIOR
				EVEN
 2406 00			    seg_ovlclass    DB  ?   ; nonzero if at leas
				t one segment in module is overlay class
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 40 - 1


				EVEN
 2408 00			    nonovl_rvect    DB  ?   ; nonzero if module 
				is overlaid but overlay->root calls aren't vecto
				red
				EVEN
 240A 0000			    ovl_ioblk   DW  ?       ; segment of 4K .OVL
				 i/o block
 240C 0000			    lookup_tbl_segdef   DW  ?   ; segdef entry o
				f lookup table segment
 240E 0000			    ind_tbl_segdef   DW  ?  ; segdef entry of in
				direct call table segment
 2410 0000			    segcall_tbl_segdef  DW  ?   ; segdef entry o
				f segment call segment
 2412 0000			    _dt_seg_size    DW  ?   ;  size of current C
				larion _DT segment
 2414 0000			    _dat_seg_size   DW  ?   ;  size of current C
				larion _DAT segment
 2416 0000			    _dt_seg_index   DW  ?       ; segment index 
				of clarion _DT segment
 2418 0000			    _dat_seg_index  DW  ?       ; segment index 
				of clarion _DAT segment
 241A 0000			    ems_base    DW  ?       ; base of EMS page
 241C 0000			    ems_pagecount   DW  ?   ; count of WarpLink 
				allocated EMS pages
 241E 0000			    ems_page_avail  DW  ?   ; EMS pages availabl
				e for WarpLink use after i/o buffer
 2420 00000000			    xms_addr    DD  ?       ; XMS entry point ad
				dress
				ENDIF
				
				EVEN                        ; maximize speed on 
				8086 and better
				; word values
 2424 0000			psp DW  ?                   ; machlink's PSP val
				ue
 2426 0000			image_handle    DW  ?       ; handle of temporar
				y file containing program's memory image
 2428 0000			image_mem_ptr   DW  ?       ; segment pointer to
				 program's image in memory
 242A 0000			map_handle      DW  ?       ; handle of map file
 242C 0000			memory_blk_base DW  ?       ; segment of memory 
				block allocated thru DOS function 48h
 242E 0000			memory_blk_size DW  ?       ; size of allocated 
				memory block in paragraphs
 2430 0000			memory_blk_end  DW  ?       ; end of memory bloc
				k (first segment value past end)
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 41 - 1


 2432 0000			allocation_base DW  ?       ; first available se
				gment for block allocations
 2434 0000			allocation_top  DW  ?       ; last+1 available s
				egment for block allocations
 2436 0000			buffer_base     DW  ?       ; base of buffer for
				 file i/o (segment)
 2438 0000			buffer_end      DW  ?       ; end of buffer in m
				emory (offset)
 243A 0000			buffer_head     DW  ?       ; address to begin l
				oad in buffer (offset)
 243C 0000			buffer_tail     DW  ?       ; address to end loa
				d in buffer (offset)
 243E 0000			buffer_size     DW  ?       ; size of buffer for
				 file i/o in paragraphs
 2440 0000			read_buff_ptr   DW  ?       ; file i/o buffer re
				ad offset (curr_buff_ptr before update)
 2442 0000			prev_read_ptr   DW  ?       ; file i/o buffer re
				ad offset for previous object record
 2444 0000			prev_rec_len    DW  ?       ; length of previous
				 (L?DATA) record
 2446 0000			current_lnames  DW  ?       ; number of current 
				LNAMES record
 2448 0000			current_extdef  DW  ?       ; number of current 
				EXTDEF record
 244A 0000			current_segdef  DW  ?       ; number of current 
				SEGDEF record
 244C 0000			current_grpdef  DW  ?       ; number of current 
				GRPDEF record
 244E 0000			eof_pos     DW  ?           ; offset position of
				 end of file in i/o buffer
 2450 0000			data_fixup_count    DW  ?   ; count of elements 
				in data_fixup_flag array
 2452 0000			master_segblk   DW  ?       ; address of block h
				olding master segdef pointers for overlaid segpa
				rts
 2454 0000			ovl_filepos_blk DW  ?       ; segment of block h
				olding dword file positions of overlays
				
				; double word values
 2456 00000000			file_pos_adj    DD  ?       ; file bytes adjustm
				ent from wrapped buffer to get true offset of fi
				le
 245A 00000000			prev_pos_adj    DD  ?       ; adjustment value f
				or previous record pointer
 245E 00000000			lib_pos_adj     DD  ?       ; adjustment for lib
				rary files, to compute offset from module start
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 42 - 1


 2462 00000000			image_size      DD  ?       ; program's executab
				le image size
 2466 00000000			lib_id          DD  ?       ; library identifica
				tion number (((current_lib|0x8000)*65536L)+lib_m
				odule)
				
				; character or byte strings
				EVEN
 246A  0080 [			cmd_line        DB  128 DUP (?) ; command line f
        00			rom PSP
       ]
				EVEN
 24EA				prev_libname    LABEL   BYTE    ; name of librar
				y holding last processed module, shared with tmo
				d_name
 24EA  0080 [			tmod_name       DB  128 DUP (?) ; name from T-mo
        00			dule name field of THEADR record
       ]
				EVEN
 256A  0020 [			ovl_class_name  DB  32 DUP (?)  ; overlay class 
        00			name
       ]
				
				; byte arrays
				EVEN
 258A  0004 [			frame_thrd_meth     DB  4 DUP (?)   ; frame fixu
        00			p thread method
       ]
				EVEN
 258E  0004 [			target_thrd_meth    DB  4 DUP (?)   ; target fix
        00			up thread method
       ]
				
				; word arrays
				EVEN
 2592				seg_partent_indptr  LABEL   WORD    ; seg_parten
				t_indptr and seg_defent_indptr share same memory
				 space
 2592  00FF [			seg_defent_indptr   DW  SEGDEF_MAX DUP (?)  ; in
        0000			dexed segment pointers to segdef entries of last
       ]			 read segdef record
 2790  0015 [			grp_ent_indptr      DW  GRPDEF_MAX DUP (?)  ; in
        0000			dexed segment pointers to grpdef entries of last
       ]			 read grpdef record
				IFNDEF JUNIOR
 27BA				inc_seg_clcode      LABEL   BYTE    ; shared mem
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 43 - 1


				ory space with ext_defent_indptr, used by increm
				ental link
				ENDIF
 27BA  03FF [			ext_defent_indptr   DW  EXTDEF_MAX DUP (?)  ; in
        0000			dexed segment pointers to pubdef declaration ent
       ]			ries of extdefs in object module
				
				IFNDEF JUNIOR
 2FB8				ind_tbl_array       LABEL   WORD    ; share memo
				ry space with lookup_tbl_array, used after looku
				p_tbl_array
 2FB8				lookup_tbl_array    LABEL   WORD    ; share memo
				ry space with ovl_reloc_array and ovlpub_array, 
				used between pass 1 and 2
 2FB8				ovl_reloc_array     LABEL   WORD    ; share memo
				ry space with ovlpub_array, used in pass 2
 2FB8  0400 [			ovlpub_array        DW  EXTDEF_MAX+1 DUP (?)    
        0000			; index byte of overlaid public declaration entr
       ]			ies, use in pass 1
				                                                
				; bit 15 set if far called, bit 14 if near
				ENDIF
				
 37B8				env_opt_storage     LABEL   BYTE    ; shared, us
				ed prior to pass one
 37B8				lib_page_storage    LABEL   WORD    ; shared mem
				ory space with data_fixup_flag,used in pass 1
 37B8				ddl_hold_buff       LABEL   WORD    ; used by dd
				l's to hold pub/com/extdef's prior to file write
 37B8  0401 [			data_fixup_flag     DW  1025 DUP (?)    ; positi
        0000			ons in data record that flag a segment fixup, us
       ]			ed pass 2
 3FBA  0004 [			frame_thrd_index    DW  4 DUP (?)   ; frame fixu
        0000			p thread index
       ]
 3FC2  0004 [			target_thrd_index   DW  4 DUP (?)   ; target fix
        0000			up thread index
       ]
				
				; doubleword arrays
 3FCA				ddl_symbol_lookup   LABEL   DWORD   ; used by dd
				l's to translate symbol seg:off to file position
 3FCA  01FF [			lnames_ent_indptr   DD  LNAMES_MAX DUP (?)  ; in
        00000000		dexed segment:offset pointers to lnames entries 
       ]			of last read lnames record
				
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 44 - 1


				;*****************************
				;* Constant data             *
				;*****************************
				
 0000				.CONST
				
 0000 07 07 07			beep3   DB  BELL,BELL,BELL
				
				IFNDEF DEMO
 0003 27			ddlpass_len     DB  ddlpass_stop-ddlpass_text
 0004 0D 0A 2A 2A 2A 20		ddlpass_text    DB  CR,LF,'*** Start of main DDL
       53 74 61 72 74 20	 processing pass'
       6F 66 20 6D 61 69
       6E 20 44 44 4C 20
       70 72 6F 63 65 73
       73 69 6E 67 20 70
       61 73 73
 002B = 002B			ddlpass_stop    =   $
				ENDIF
				
 002B 12			obj_len         DB  obj_stop-obj_text
 002C 20 6F 6E 20 6F 62		obj_text        DB  ' on object modules'
       6A 65 63 74 20 6D
       6F 64 75 6C 65 73
 003E = 003E			obj_stop        =   $
				
 003E 13			lib_len         DB  lib_stop-lib_text
 003F 20 6F 6E 20 6C 69		lib_text        DB  ' on library modules'
       62 72 61 72 79 20
       6D 6F 64 75 6C 65
       73
 0052 = 0052			lib_stop        =   $
				
 0052 1B			stwrite_len     DB  stwrite_stop-stwrite_text
 0053 0D 0A 2A 2A 2A 20		stwrite_text    DB  CR,LF,'*** Begin writing fil
       42 65 67 69 6E 20	e(s)'
       77 72 69 74 69 6E
       67 20 66 69 6C 65
       28 73 29
 006E = 006E			stwrite_stop    =   $
				
 006E 19			endwrite_len    DB  endwrite_stop-endwrite_text
 006F 0D 0A 2A 2A 2A 20		endwrite_text   DB  CR,LF,'*** End writing file(
       45 6E 64 20 77 72	s)'
       69 74 69 6E 67 20
       66 69 6C 65 28 73
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 45 - 1


       29
 0088 = 0088			endwrite_stop   =   $
				
				;*****************************
				;* Code begins               *
				;*****************************
				
 0000				.CODE
				
				;*****************************
				;* External declarations     *
				;*****************************
				
				EXTRN   setup:NEAR,getargs:NEAR,credits:NEAR,sum
				mary:NEAR
				EXTRN   get_memory:NEAR,free_memory:NEAR,parse:N
				EAR
				EXTRN   pass1:NEAR,proc1_libs:NEAR
				EXTRN   init_map:NEAR,setup_exe_image:NEAR,finis
				h_map:NEAR
				EXTRN   pass2:NEAR,proc2_libs:NEAR,write_program
				:NEAR,cleanup:NEAR
				EXTRN   give_warn_count:NEAR,give_load_size:NEAR
				
				EXTRN   resolve_communals:NEAR
				;*** EXTRN   show_unreferenced:NEAR
				EXTRN   ovl_entry_point:NEAR,do_incremental:NEAR
				EXTRN   ilf_rewind:NEAR,ilf_write_eof:NEAR,check
				_ems:NEAR
				EXTRN   alloc_ems_trans:NEAR,check_xms:NEAR
				EXTRN	check_qlk:NEAR,write_qlk_unres:NEAR
				
				IFNDEF DEMO
				EXTRN   reinit_variables:NEAR
				EXTRN	ddl_save_libmod_entry:NEAR,proc_ddl:NEAR
				,create_ddl:NEAR
				ENDIF
				
				;*****************************
				;* MAIN                      *
				;*****************************
				
 0000				start:
 0000  B8 ---- R			mov ax, DGROUP	; setup small model: DS=
				SS=DGROUP
 0003  8E D8				mov ds, ax
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 46 - 1


 0005  8C D2				mov dx, ss
 0007  2B D0				sub dx, ax
 0009  B1 04				mov cl, 4
 000B  D3 E2				shl dx, cl
 000D  8E D0				mov ss, ax
 000F  03 E2				add sp, dx
				
 0011  8B DC				mov bx, sp		; free rest of D
				OS memory
 0013  D3 EB				shr bx, cl
 0015  8C C1				mov cx, es
 0017  2B C1				sub ax, cx
 0019  03 D8				add bx, ax
 001B  B4 4A				mov ah, 4Ah
 001D  CD 21				int 21h
				
				;--- clear _BSS segment
				externdef _edata:abs
				externdef _end:abs
 001F  06				push es
 0020  BF 0000 E			mov di, offset _edata
 0023  B9 0000 E			mov cx, offset _end
 0026  2B CF				sub cx, di
 0028  33 C0				xor ax, ax
 002A  1E				push ds
 002B  07				pop es
 002C  FC				cld
 002D  F3/ AA				rep stosb
 002F  07				pop es
				
 0030				main        PROC
 0030  E8 0000 E		    call    setup           ; system changes, se
				gment register setup, etc.
 0033  E8 0000 E		    call    getargs         ; get command line a
				rguments from PSP
 0036  E8 0000 E		    call    credits         ; display linker cre
				dit line
 0039  80 0E 0000 R 00		    or  is_args,0           ; check for argument
				s to linker
 003E  75 06			    jne m2                  ; at least one argum
				ent
 0040  E8 0000 E		    call    summary         ; display summary of
				 linker syntax/commands
				
 0043				to_exit_1:
 0043  E9 0194			    jmp NEAR PTR exit_1     ;   and exit program
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 47 - 1


 0046				m2:
 0046  E8 0000 E		    call    get_memory      ; allocate memory fo
				r file buffers and control blocks
				
 0049  A1 2432 R		    mov ax,allocation_base
 004C  A3 0000 E		    mov mod_alloc_base,ax   ; save base of alloc
				ations prior to any allocations
				
 004F  E8 0000 E		    call    parse           ; parse linker comma
				nd line
 0052  E8 0000 E		    call    free_memory     ; de-allocate memory
				 prior to new memory allocation
				
 0055  E8 0000 E		    call    check_ems       ; see if useable EMS
 0058  E8 0000 E		    call    check_xms       ; see if useable XMS
 005B  80 3E 001E R 00		    cmp is_clpinc,0         ; see if clipper inc
				remental link flag set
 0060  74 1C			    je  m3                  ; no
 0062  E8 0000 E		    call    do_incremental  ; do incremental lin
				k or setup if no ILF flag
 0065  3C 4E			    cmp al,'N'              ; check if should ex
				it link (success or can't incremental link)
 0067  74 DA				je	to_exit_1			
				; yes
				
				; incremental link failed, continuing with full 
				link
				; reparse options in case of library module
 0069  A1 0000 E			mov	ax,mod_alloc_base
 006C  A3 2432 R			mov	allocation_base,ax	; reset 
				memory allocation base
 006F  E8 0000 E		    call    get_memory		; allocate memor
				y for file buffers and control blocks
 0072  E8 0000 E		    call    parse			; parse 
				linker command line
 0075  E8 0000 E		    call    free_memory		; de-allocate me
				mory prior to new memory allocation
 0078  E8 0000 E		    call    check_ems       ; see if useable EMS
 007B  E8 0000 E		    call    check_xms       ; see if useable XMS
				
 007E				m3:
 007E  E8 0000 E		    call    get_memory      ; allocate memory fo
				r file buffers and control blocks
				
 0081  E8 0000 E		    call    alloc_ems_trans ; allocate EMS trans
				fer buffer if necessary
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 48 - 1


				
				IFNDEF DEMO
 0084  A0 0025 R		    mov al,is_ddl
 0087  0A 06 0026 R		    or  al,use_ddl          ; see if creating or
				 using DDL
 008B  A2 0027 R		    mov any_ddl,al          ; save any DDL usage
				 flag
 008E  74 08			    je  m_nocreate          ; no
 0090  C6 06 002B R 00			mov	is_sympac,0			
				; no symbol table compaction with DDLs
 0095  E8 0000 E		    call    create_ddl      ; create the DDL
				ENDIF
				
 0098				m_nocreate:
 0098  A1 2432 R		    mov ax,allocation_base
 009B  A3 0000 E		    mov mod_alloc_base,ax   ; save base of alloc
				ations prior to any module stuff
				
 009E  80 3E 0017 R 00		    cmp is_linkinfo,0       ; see if linker info
				rmation to be printed
 00A3  74 0C			    je  p1ostart            ; no
 00A5  BB 012F R		    mov bx,OFFSET DGROUP:stpass_text
 00A8  E8 015E			    call    print_info
 00AB  BB 002C R		    mov bx,OFFSET DGROUP:obj_text
 00AE  E8 0158			    call    print_info
				
 00B1				p1ostart:
 00B1  E8 0000 E		    call    pass1           ; perform first pass
				 of linker
 00B4  80 3E 0017 R 00		    cmp is_linkinfo,0       ; see if linker info
				rmation to be printed
 00B9  74 18			    je  p1oend              ; no
 00BB  BB 0145 R		    mov bx,OFFSET DGROUP:endpass_text
 00BE  E8 0148			    call    print_info
 00C1  BB 002C R		    mov bx,OFFSET DGROUP:obj_text
 00C4  E8 0142			    call    print_info
 00C7  BB 012F R		    mov bx,OFFSET DGROUP:stpass_text
 00CA  E8 013C			    call    print_info
 00CD  BB 003F R		    mov bx,OFFSET DGROUP:lib_text
 00D0  E8 0136			    call    print_info
				
 00D3				p1oend:
 00D3  80 3E 002A R 00			cmp	is_quick,0			
				; see if quick linking
 00D8  74 03				je	p1_p1lib			
				; yes
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 49 - 1


 00DA  E8 0000 E			call	check_qlk		; check 
				quick link file
				
 00DD				p1_p1lib:
 00DD  E8 0000 E		    call    proc1_libs      ; perform first pass
				 library processing
 00E0  80 3E 0017 R 00		    cmp is_linkinfo,0       ; see if linker info
				rmation to be printed
 00E5  74 0C			    je  p1lend              ; no
 00E7  BB 0145 R		    mov bx,OFFSET DGROUP:endpass_text
 00EA  E8 011C			    call    print_info
 00ED  BB 003F R		    mov bx,OFFSET DGROUP:lib_text
 00F0  E8 0116			    call    print_info
				
 00F3				p1lend:
 00F3  B0 32			    mov al,'2'
 00F5  A2 0143 R		    mov stpass_num,al       ; change pass number
				 to 2
 00F8  A2 0157 R		    mov endpass_num,al
				
				IFNDEF DEMO
 00FB  80 3E 0027 R 00		    cmp any_ddl,0           ; see if creating or
				 using DDL
 0100  74 3B			    je  m4                  ; no
				
 0102  80 3E 0107 R 01		    cmp udl_proc_pass,1     ; see if processing 
				UDL w/libs
 0107  75 2C			    jne no_udl              ; no
				
 0109  E8 0000 E		    call    free_memory     ; de-allocate memory
				 prior to new memory allocation
 010C  FE 06 0107 R		    inc udl_proc_pass       ; bump flag to indic
				ate UDL processing done
 0110  E8 0000 E		    call    reinit_variables    ; reset the vari
				ables
 0113  C7 06 003A R 0000	    mov module_count,0      ; reinit module coun
				t
 0119  A1 0000 E		    mov ax,mod_alloc_base
 011C  A3 2432 R		    mov allocation_base,ax  ; restore base of al
				locations prior to any module stuff
 011F  E8 0000 E		    call    ddl_save_libmod_entry   ; save the l
				ibrary module entries in low memory
 0122  E8 0000 E		    call    get_memory      ; allocate memory fo
				r file buffers and control blocks
				
 0125  80 3E 0017 R 00		    cmp is_linkinfo,0       ; see if linker info
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 50 - 1


				rmation to be printed
 012A  74 85			    je  p1ostart            ; no
 012C  BB 0004 R		    mov bx,OFFSET DGROUP:ddlpass_text
 012F  E8 00D7			    call    print_info
 0132  E9 FF7C			    jmp NEAR PTR p1ostart      ; reloop and proc
				ess as UDL
				
 0135				no_udl:
 0135  E8 0000 E		    call    proc_ddl        ; finish processing 
				the DDL
 0138  32 C0			    xor al,al               ; init return code t
				o zero
 013A  E9 00AF			    jmp NEAR PTR exit_link  ; done
				ENDIF
				
 013D				m4:
 013D  E8 0000 E		    call    resolve_communals   ; resolve commun
				al variables if any, adjust segments
 0140  E8 0000 E		    call    free_memory     ; de-allocate memory
				 prior to new memory allocation
				
 0143  E8 0000 E		    call    ilf_rewind      ; rewind ilf file if
				 exists
				
 0146  E8 0000 E		    call    init_map        ; if map file, write
				 header info
 0149  E8 0000 E		    call    setup_exe_image ; compute segment fr
				ame values and allocate disk/memory for executab
				le image
				
 014C  E8 0000 E		    call    ilf_write_eof   ; write eof mark to 
				ilf file, if exists
				
 014F  E8 0000 E		    call    get_memory      ; allocate memory fo
				r file buffers and control blocks
 0152  80 3E 0017 R 00		    cmp is_linkinfo,0       ; see if linker info
				rmation to be printed
 0157  74 0C			    je  p2ostart            ; no
 0159  BB 012F R		    mov bx,OFFSET DGROUP:stpass_text
 015C  E8 00AA			    call    print_info
 015F  BB 002C R		    mov bx,OFFSET DGROUP:obj_text
 0162  E8 00A4			    call    print_info
				
 0165				p2ostart:
 0165  E8 0000 E		    call    pass2           ; perform second pas
				s of linker
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 51 - 1


 0168  80 3E 0017 R 00		    cmp is_linkinfo,0       ; see if linker info
				rmation to be printed
 016D  74 18			    je  p2oend              ; no
 016F  BB 0145 R		    mov bx,OFFSET DGROUP:endpass_text
 0172  E8 0094			    call    print_info
 0175  BB 002C R		    mov bx,OFFSET DGROUP:obj_text
 0178  E8 008E			    call    print_info
 017B  BB 012F R		    mov bx,OFFSET DGROUP:stpass_text
 017E  E8 0088			    call    print_info
 0181  BB 003F R		    mov bx,OFFSET DGROUP:lib_text
 0184  E8 0082			    call    print_info
				
 0187				p2oend:
 0187  E8 0000 E		    call    proc2_libs      ; perform second pas
				s library processing
 018A  80 3E 0000 E 00			cmp	writing_qlk_flag,0	; see if
				 writing qlk file
 018F  74 03				je	p2_endlib			
				; no
 0191  E8 0000 E			call	write_qlk_unres
				
 0194				p2_endlib:
 0194  80 3E 0017 R 00		    cmp is_linkinfo,0       ; see if linker info
				rmation to be printed
 0199  74 0C			    je  p2lend              ; no
 019B  BB 0145 R		    mov bx,OFFSET DGROUP:endpass_text
 019E  E8 0068			    call    print_info
 01A1  BB 003F R		    mov bx,OFFSET DGROUP:lib_text
 01A4  E8 0062			    call    print_info
				
 01A7				p2lend:
 01A7  E8 0000 E		    call    free_memory     ; de-allocate memory
				
 01AA  83 3E 0110 R 00		    cmp ovl_count,0         ; see if any overlay
				s
 01AF  74 03			    je  mach_1              ; no
 01B1  E8 0000 E		    call    ovl_entry_point ; make entry point g
				o to overlay mananger
				
 01B4				mach_1:
 01B4  80 3E 0017 R 00		    cmp is_linkinfo,0       ; see if linker info
				rmation to be printed
 01B9  74 06			    je  wstart              ; no
 01BB  BB 0053 R		    mov bx,OFFSET DGROUP:stwrite_text
 01BE  E8 0048			    call    print_info
				
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 52 - 1


 01C1				wstart:
 01C1  E8 0000 E		    call    write_program   ; write finished .CO
				M or .EXE program
 01C4  E8 0000 E		    call    finish_map      ; if map file, write
				 remaining info
 01C7  80 3E 0017 R 00		    cmp is_linkinfo,0       ; see if linker info
				rmation to be printed
 01CC  74 06			    je  wend                ; no
 01CE  BB 006F R		    mov bx,OFFSET DGROUP:endwrite_text
 01D1  E8 0035			    call    print_info
				
 01D4				wend:
				
				;***    call    show_unreferenced   ; show symbo
				ls not referenced
 01D4  E8 0000 E		    call    give_warn_count ; give count of warn
				ing messages, if any
 01D7  E8 0000 E		    call    give_load_size  ; give EXE load imag
				e size
				
 01DA				exit_1:
 01DA  32 C0			    xor al,al               ; init return code t
				o zero
 01DC  83 3E 0034 R 00		    cmp warn_count,0        ; see if any warning
				s were generated
 01E1  74 09			    je  exit_link           ; no
 01E3  80 3E 0015 R 00		    cmp is_exit0,0          ; see if warnings ge
				nerate exit code of 0
 01E8  75 02			    jne exit_link           ; yes
 01EA  FE C0			    inc al                  ; return exit code o
				f 1 for warnings
				
 01EC				exit_link:
 01EC  B4 4C			    mov ah,4ch              ; terminate
 01EE  50			    push    ax              ; save terminate and
				 return code
 01EF  E8 0000 E		    call    cleanup         ; clean up any inter
				im system changes made
				
				IFNDEF DEMO
 01F2  80 3E 0016 R 00		    cmp is_beep,0           ; see if should beep
 01F7  74 0D			    je  exit_3              ; no
				
 01F9  BB 0001			    mov bx,STDOUT
 01FC  BA 0000 R		    mov dx,OFFSET DGROUP:beep3
 01FF  B9 0003			    mov cx,3
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Page 53 - 1


 0202  B4 40			    mov ah,40h              ; write to file or d
				evice
 0204  CD 21			    int 21h                 ; beep the speaker t
				hree times
				ENDIF
				
 0206				exit_3:
 0206  58			    pop ax                  ; restore terminate 
				and return code
 0207  CD 21			    int 21h
 0209				main        ENDP
				
				;*****************************
				;* PRINT_INFO                *
				;*****************************
				
				; print linker pass info
				; upon entry bx -> text to print, with length by
				te preceding
				; destroys ax,bx,cx,dx
				
 0209				print_info  PROC
 0209  8A 4F FF			    mov cl,[bx-1]           ; get length of stri
				ng to print
 020C  8B D3			    mov dx,bx               ; ds:dx -> string
 020E  32 ED			    xor ch,ch               ; zap high byte of c
				x
 0210  BB 0001			    mov bx,STDOUT           ; write to standard 
				output device
 0213  B4 40			    mov ah,40h              ; write to device
 0215  CD 21			    int 21h
 0217  C3			    ret
 0218				print_info  ENDP
				
				END start
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Symbols 54 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

GRP_BLK_STRUC  . . . . . . . . .	 0110
  gbs_entry_count  . . . . . . .	 0000	     Word
  grp_blk_ptr  . . . . . . . . .	 0002	     Word
  gbs_filler . . . . . . . . . .	 0004	     Byte
  gbs_entry  . . . . . . . . . .	 0010	     Byte
GRP_ENT_STRUC  . . . . . . . . .	 0010
  ges_offset . . . . . . . . . .	 0000	     DWord
  ges_grp_nament_ptr . . . . . .	 0004	     Word
  ges_grp_namblk_ptr . . . . . .	 0006	     Word
  ges_grp_index  . . . . . . . .	 0008	     Word
  ges_filler . . . . . . . . . .	 000A	     Byte
LIB_MODENT_STRUC . . . . . . . .	 0020
  lms_lib_number . . . . . . . .	 0000	     Word
  lms_page_number  . . . . . . .	 0002	     Word
  lms_page_size  . . . . . . . .	 0004	     Word
  lms_mod_len  . . . . . . . . .	 0006	     Word
  lms_ems_page1  . . . . . . . .	 0008	     Word
  lms_ems_page2  . . . . . . . .	 000A	     Word
  lms_ems_page3  . . . . . . . .	 000C	     Word
  lms_ems_page4  . . . . . . . .	 000E	     Word
  lms_ems_buffptr  . . . . . . .	 0010	     Word
  lms_filler . . . . . . . . . .	 0012	     Byte
  lms_modent_ptr . . . . . . . .	 001E	     Word
LIB_NAMBLK_STRUC . . . . . . . .	 0110
  lns_free . . . . . . . . . . .	 0000	     Word
  lib_namblk_ptr . . . . . . . .	 0002	     Word
  lns_namelist . . . . . . . . .	 0004	     Byte
LNAMES_BLK_STRUC . . . . . . . .	 0560
  lbs_free . . . . . . . . . . .	 0000	     Word
  lnamesblk_ptr  . . . . . . . .	 0002	     Word
  lbs_namelist . . . . . . . . .	 0004	     Byte
OBJ_NAMBLK_STRUC . . . . . . . .	 0210
  free . . . . . . . . . . . . .	 0000	     Word
  objblk_ptr . . . . . . . . . .	 0002	     Word
  namelist . . . . . . . . . . .	 0004	     Byte
OVLPUB_BLK_STRUC . . . . . . . .	 000E
  obs_blk_ptr  . . . . . . . . .	 0000	     Word
  obs_flag1  . . . . . . . . . .	 0002	     Byte
  obs_segpart_ptr  . . . . . . .	 0003	     Word
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Symbols 55 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

  obs_near_pubcount  . . . . . .	 0005	     Word
  obs_far_pubcount . . . . . . .	 0007	     Word
  obs_vect_count . . . . . . . .	 0009	     Word
  obs_flag2  . . . . . . . . . .	 000B	     Byte
  obs_pubdecl_ptr  . . . . . . .	 000C	     Word
PUB_DECLBLK_STRUC  . . . . . . .	 0810
  entry_count  . . . . . . . . .	 0000	     Word
  pub_declblk_ptr  . . . . . . .	 0002	     Word
  pdbs_filler  . . . . . . . . .	 0004	     Byte
  pdbs_entry . . . . . . . . . .	 0010	     Byte
PUB_DECLENT_STRUC  . . . . . . .	 0010
  seg_partent_ptr  . . . . . . .	 0000	     Word
  pdes_frame_number  . . . . . .	 0002	     Word
  pub_nameent_ptr  . . . . . . .	 0004	     Word
  pub_nameblk_ptr  . . . . . . .	 0006	     Word
  pub_offset . . . . . . . . . .	 0008	     Word
  pub_declent_loptr  . . . . . .	 000A	     Word
  pub_declent_hiptr  . . . . . .	 000C	     Word
  def_flag . . . . . . . . . . .	 000E	     Byte
  gen_flag . . . . . . . . . . .	 000F	     Byte
PUB_NAMBLK_STRUC . . . . . . . .	 0A10
  pns_free . . . . . . . . . . .	 0000	     Word
  pdnameblk_ptr  . . . . . . . .	 0002	     Word
  pns_namelist . . . . . . . . .	 0004	     Byte
REL_BLK_STRUC  . . . . . . . . .	 0200
  rbs_entry_count  . . . . . . .	 0000	     Word
  rel_blk_ptr  . . . . . . . . .	 0002	     Word
  rel_items  . . . . . . . . . .	 0004	     Byte
SEG_DEFBLK_STRUC . . . . . . . .	 0410
  sdbs_entry_count . . . . . . .	 0000	     Word
  seg_defblk_ptr . . . . . . . .	 0002	     Word
  sdbs_filler  . . . . . . . . .	 0004	     Byte
  sdbs_entry . . . . . . . . . .	 0010	     Byte
SEG_DEFENT_STRUC . . . . . . . .	 0020
  sdes_frame_number  . . . . . .	 0000	     Word
  sdes_offset  . . . . . . . . .	 0002	     DWord
  seg_len  . . . . . . . . . . .	 0006	     Word
  seg_nament_ptr . . . . . . . .	 0008	     Word
  seg_namblk_ptr . . . . . . . .	 000A	     Word
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Symbols 56 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

  class_nament_ptr . . . . . . .	 000C	     Word
  class_namblk_ptr . . . . . . .	 000E	     Word
  sdes_grp_ent_ptr . . . . . . .	 0010	     Word
  sdes_fill2 . . . . . . . . . .	 0012	     Word
  seg_defent_nextptr . . . . . .	 0014	     Word
  seg_partent_firstptr . . . . .	 0016	     Word
  seg_partent_lastptr  . . . . .	 0018	     Word
  sdes_acbp_byte . . . . . . . .	 001A	     Byte
  addr_resolved_flag . . . . . .	 001B	     Byte
  sdes_ovl_flag  . . . . . . . .	 001C	     Byte
  sdes_filler  . . . . . . . . .	 001D	     Byte
  sdes_end_vect  . . . . . . . .	 001E	     Word
SEG_PARTBLK_STRUC  . . . . . . .	 0410
  spbs_entry_count . . . . . . .	 0000	     Word
  seg_partblk_ptr  . . . . . . .	 0002	     Word
  spbs_filler  . . . . . . . . .	 0004	     Byte
  spbs_entry . . . . . . . . . .	 0010	     Byte
SEG_PARTENT_STRUC  . . . . . . .	 0010
  spes_offset  . . . . . . . . .	 0000	     Word
  seg_partent_nextptr  . . . . .	 0002	     Word
  seg_defent_backptr . . . . . .	 0004	     Word
  file_mod_id  . . . . . . . . .	 0006	     DWord
  record_index . . . . . . . . .	 000A	     Byte
  spes_acbp_byte . . . . . . . .	 000B	     Byte
  spes_part_len  . . . . . . . .	 000C	     Word
  spes_vect_low  . . . . . . . .	 000E	     Byte
  spes_ovl_flag  . . . . . . . .	 000F	     Byte
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Symbols 57 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	16 Bit	 0190	  Word	  Public  'DATA'
					
STACK  . . . . . . . . . . . . .	16 Bit	 0400	  Para	  Stack	  'STACK'
					 
CONST  . . . . . . . . . . . . .	16 Bit	 0088	  Word	  Public  'CONST'
					 ReadOnly
_BSS . . . . . . . . . . . . . .	16 Bit	 47C6	  Word	  Public  'BSS'  
_TEXT  . . . . . . . . . . . . .	16 Bit	 0218	  Word	  Public  'CODE'
					
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Symbols 58 - 1




Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

main . . . . . . . . . . . . . .	P Near	 0030	  _TEXT	Length= 01D9 Pri
					vate
print_info . . . . . . . . . . .	P Near	 0209	  _TEXT	Length= 000F Pri
					vate
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Symbols 59 - 1




Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 0000h	 
@DataSize  . . . . . . . . . . .	Number	 0000h	 
@Interface . . . . . . . . . . .	Number	 0000h	 
@Model . . . . . . . . . . . . .	Number	 0002h	 
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 DGROUP
@fardata?  . . . . . . . . . . .	Text   	 FAR_BSS
@fardata . . . . . . . . . . . .	Text   	 FAR_DATA
@stack . . . . . . . . . . . . .	Text   	 DGROUP
BAD_OPTION_ERR . . . . . . . . .	Number	 0005h	 
BAD_RECTYPE_ERR  . . . . . . . .	Number	 0006h	 
BAKPAT1  . . . . . . . . . . . .	Number	 00B2h	 
BAKPAT2  . . . . . . . . . . . .	Number	 00B3h	 
BELL . . . . . . . . . . . . . .	Number	 0007h	 
BIT16_ERRVAL . . . . . . . . . .	Number	 0010h	 
BIT8_ERRVAL  . . . . . . . . . .	Number	 0008h	 
BLKDEF . . . . . . . . . . . . .	Number	 007Ah	 
BLKEND . . . . . . . . . . . . .	Number	 007Ch	 
CEXTDEF  . . . . . . . . . . . .	Number	 00BCh	 
CLASSNAM_IND_ERR . . . . . . . .	Number	 0010h	 
COMBINE_VAL_ERR  . . . . . . . .	Number	 0011h	 
COMCONFLICT_ERR  . . . . . . . .	Number	 0048h	 
COMDEF . . . . . . . . . . . . .	Number	 00B0h	 
COMENT . . . . . . . . . . . . .	Number	 0088h	 
COMMAND_ERRVAL . . . . . . . . .	Number	 0004h	 
COMM_OVRFLW_ERR  . . . . . . . .	Number	 0038h	 
COM_ENTRY_ERR  . . . . . . . . .	Number	 0031h	 
COM_FIXUP_ERR  . . . . . . . . .	Number	 0016h	 
COM_SIZE_ERR . . . . . . . . . .	Number	 0017h	 
COM_STACK_ERR  . . . . . . . . .	Number	 0015h	 
CR . . . . . . . . . . . . . . .	Number	 000Dh	 
DATA_OVLBLK_BYSIZE . . . . . . .	Number	 0100h	 
DATA_OVLBLK_SIZE . . . . . . . .	Number	 0010h	 
DDLMOD_COUNT_ERR . . . . . . . .	Number	 0049h	 
DEBSYM . . . . . . . . . . . . .	Number	 007Eh	 
DEF_SEG_OVRFLW_ERR . . . . . . .	Number	 0039h	 
DISK_FULL_ERR  . . . . . . . . .	Number	 003Ah	 
DOSSEG_MARK  . . . . . . . . . .	Number	 009Eh	 
DOS_ACC_DEN_ERR  . . . . . . . .	Number	 0027h	 
DOS_ERRVAL . . . . . . . . . . .	Number	 0020h	 
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Symbols 60 - 1




Symbols:

                N a m e                 Type     Value    Attr

DOS_FILE_FND_ERR . . . . . . . .	Number	 0024h	 
DOS_INSUF_MEM_ERR  . . . . . . .	Number	 002Ah	 
DOS_INV_HAND_ERR . . . . . . . .	Number	 0028h	 
DOS_INV_MEM_BLK_ERR  . . . . . .	Number	 002Bh	 
DOS_MCB_DSTRY_ERR  . . . . . . .	Number	 0029h	 
DOS_OUT_HAND_ERR . . . . . . . .	Number	 0026h	 
DOS_PATH_FND_ERR . . . . . . . .	Number	 0025h	 
EMS_EMM_ERR  . . . . . . . . . .	Number	 0046h	 
ENDDAT_VAL_ERR . . . . . . . . .	Number	 0019h	 
ENDFRAME_THRD_ERR  . . . . . . .	Number	 0037h	 
EXTDEF_COUNT_ERR . . . . . . . .	Number	 0018h	 
EXTDEF_MAX . . . . . . . . . . .	Number	 03FFh	 
EXTDEF_VAL_ERR . . . . . . . . .	Number	 001Bh	 
EXTDEF . . . . . . . . . . . . .	Number	 008Ch	 
FATAL_ERRVAL . . . . . . . . . .	Number	 0001h	 
FILE_ERRVAL  . . . . . . . . . .	Number	 0006h	 
FIXUPP_DATA_ERR  . . . . . . . .	Number	 0020h	 
FIXUPP . . . . . . . . . . . . .	Number	 009Ch	 
FIXUP_OVRFLW_WARN  . . . . . . .	Number	 002Fh	 
FRAME_METH_ERR . . . . . . . . .	Number	 0035h	 
FRAME_THRD_ERR . . . . . . . . .	Number	 0034h	 
GRPDEF_MAX . . . . . . . . . . .	Number	 0015h	 
GRPDEF_VAL_ERR . . . . . . . . .	Number	 0008h	 
GRPDEF . . . . . . . . . . . . .	Number	 009Ah	 
GRPIND_VAL_ERR . . . . . . . . .	Number	 000Eh	 
GRP_BLK_SIZE . . . . . . . . . .	Number	 0011h	 
GRP_ENT_COUNT  . . . . . . . . .	Number	 0010h	 
GRP_ENT_SIZE . . . . . . . . . .	Number	 0010h	 
HASH_ARRAY_SIZE  . . . . . . . .	Number	 0400h	 
HIGH_ERR_CODE  . . . . . . . . .	Number	 004Ah	 
IDATA_BLK_MAX  . . . . . . . . .	Number	 0200h	 
IDATA_BLK_SIZE_ERR . . . . . . .	Number	 001Fh	 
IMAGE_BOUNDS_ERR . . . . . . . .	Number	 001Dh	 
INTERNAL_ERRVAL  . . . . . . . .	Number	 0002h	 
INTERNAL_ERR_COUNT . . . . . . .	Number	 000Eh	 
INTERNAL_ERR . . . . . . . . . .	Number	 0000h	 
INV_COMFIELD_VAL_ERR . . . . . .	Number	 000Ch	 
INV_DSTYPE_ERR . . . . . . . . .	Number	 000Bh	 
INV_THRD_METH_ERR  . . . . . . .	Number	 001Ch	 
IO_BUFF_SIZE . . . . . . . . . .	Number	 4000h	 
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Symbols 61 - 1




Symbols:

                N a m e                 Type     Value    Attr

LCOMDEF  . . . . . . . . . . . .	Number	 00B8h	 
LEDATA32 . . . . . . . . . . . .	Number	 00A1h	 
LEDATA . . . . . . . . . . . . .	Number	 00A0h	 
LEXTDEF  . . . . . . . . . . . .	Number	 00B4h	 
LF . . . . . . . . . . . . . . .	Number	 000Ah	 
LHEADR . . . . . . . . . . . . .	Number	 0082h	 
LIB_FORMAT_ERR . . . . . . . . .	Number	 0033h	 
LIB_MAX_READ . . . . . . . . . .	Number	 1000h	 
LIB_MODENT_SIZE  . . . . . . . .	Number	 0002h	 
LIB_NAMBLK_BYSIZE  . . . . . . .	Number	 0110h	 
LIB_NAMBLK_SIZE  . . . . . . . .	Number	 0011h	 
LIB_NAMELIST_SIZE  . . . . . . .	Number	 010Ch	 
LIB_SEARCH_1 . . . . . . . . . .	Number	 0081h	 
LIB_SEARCH_2 . . . . . . . . . .	Number	 009Fh	 
LIDATA . . . . . . . . . . . . .	Number	 00A2h	 
LINKERCAPS . . . . . . . . . . .	Text   	 "WL"
LINKER . . . . . . . . . . . . .	Text   	 "WarpLink"
LINNUM . . . . . . . . . . . . .	Number	 0094h	 
LNAMES_BLK_SIZE  . . . . . . . .	Number	 0056h	 
LNAMES_COUNT_ERR . . . . . . . .	Number	 000Dh	 
LNAMES_LIST_SIZE . . . . . . . .	Number	 055Ch	 
LNAMES_MAX . . . . . . . . . . .	Number	 01FFh	 
LNAMES . . . . . . . . . . . . .	Number	 0096h	 
LOCSYM . . . . . . . . . . . . .	Number	 0092h	 
LOC_VAL_ERR  . . . . . . . . . .	Number	 001Ah	 
LPUBDEF1 . . . . . . . . . . . .	Number	 00B6h	 
LPUBDEF2 . . . . . . . . . . . .	Number	 00B7h	 
MISSING_OVLMGR_ERR . . . . . . .	Number	 0041h	 
MODEND . . . . . . . . . . . . .	Number	 008Ah	 
MSEXTDICT  . . . . . . . . . . .	Number	 00F2h	 
MSLEND . . . . . . . . . . . . .	Number	 00F1h	 
MSLHED . . . . . . . . . . . . .	Number	 00F0h	 
MSLIBR . . . . . . . . . . . . .	Number	 00F0h	 
MULT_DEF_SYM_WARN  . . . . . . .	Number	 002Eh	 
MULT_THEADR_ERR  . . . . . . . .	Number	 0007h	 
NEST_PAREN_ERR . . . . . . . . .	Number	 0003h	 
NONCONT_OVLDATA_ERR  . . . . . .	Number	 0045h	 
NONOVL_SEG_WARN  . . . . . . . .	Number	 0043h	 
NONOVL_SYM_WARN  . . . . . . . .	Number	 0044h	 
NOSPEC_ERRVAL  . . . . . . . . .	Number	 0040h	 
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Symbols 62 - 1




Symbols:

                N a m e                 Type     Value    Attr

NOVAL_ERRVAL . . . . . . . . . .	Number	 0000h	 
NO_EXE_STACK_WARN  . . . . . . .	Number	 002Ch	 
NO_OBJMOD_ERR  . . . . . . . . .	Number	 0013h	 
NO_OFF_ERRVAL  . . . . . . . . .	Number	 0018h	 
OBJ_NAMBLK_BYSIZE  . . . . . . .	Number	 0210h	 
OBJ_NAMBLK_SIZE  . . . . . . . .	Number	 0021h	 
OBJ_NAMELIST_SIZE  . . . . . . .	Number	 020Ch	 
OVERLAY_COUNT_ERR  . . . . . . .	Number	 003Eh	 
OVERLAY_MAX_COUNT  . . . . . . .	Number	 0FFFh	 
OVLCOM_CLASH_ERR . . . . . . . .	Number	 003Fh	 
OVLPUB_BLK_BYSIZE  . . . . . . .	Number	 0400h	 
OVLPUB_BLK_SIZE  . . . . . . . .	Number	 0040h	 
OVLPUB_COUNT_ERR . . . . . . . .	Number	 0040h	 
OVLSEG_LEN_ERR . . . . . . . . .	Number	 003Ch	 
OVL_MOD_PUB_MAX_ERR  . . . . . .	Number	 0042h	 
OVL_MOD_PUB_MAX  . . . . . . . .	Number	 07FFh	 
PASS_TWO_MARK  . . . . . . . . .	Number	 00A2h	 
PUBDEF . . . . . . . . . . . . .	Number	 0090h	 
PUB_DECLBLK_SIZE . . . . . . . .	Number	 0081h	 
PUB_DECLENT_COUNT  . . . . . . .	Number	 0080h	 
PUB_DECLENT_SIZE . . . . . . . .	Number	 0010h	 
PUB_NAMBLK_SIZE  . . . . . . . .	Number	 00A1h	 
PUB_NAMELIST_SIZE  . . . . . . .	Number	 0A0Ch	 
REC_BUFF_SIZE  . . . . . . . . .	Number	 1000h	 
RELOC_COUNT_ERR  . . . . . . . .	Number	 001Eh	 
RELOC_MAX  . . . . . . . . . . .	Number	 8000h	 
REL_BLK_SIZE . . . . . . . . . .	Number	 0020h	 
REL_ITEM_COUNT . . . . . . . . .	Number	 007Fh	 
REL_ITEM_SIZE  . . . . . . . . .	Number	 0004h	 
ROOTSEG_LEN_ERR  . . . . . . . .	Number	 003Dh	 
RSP_LINE_ERR . . . . . . . . . .	Number	 0021h	 
RSP_NEST_ERR . . . . . . . . . .	Number	 0022h	 
SEGDEF32 . . . . . . . . . . . .	Number	 0099h	 
SEGDEF_MAX . . . . . . . . . . .	Number	 00FFh	 
SEGDEF_VAL_ERR . . . . . . . . .	Number	 0009h	 
SEGDEF . . . . . . . . . . . . .	Number	 0098h	 
SEGMENT_LEN_ERR  . . . . . . . .	Number	 0012h	 
SEGNAM_IND_ERR . . . . . . . . .	Number	 000Fh	 
SEG_DEFBLK_SIZE  . . . . . . . .	Number	 0041h	 
SEG_DEFENT_COUNT . . . . . . . .	Number	 0020h	 
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Symbols 63 - 1




Symbols:

                N a m e                 Type     Value    Attr

SEG_DEFENT_SIZE  . . . . . . . .	Number	 0020h	 
SEG_GRP_CONF_ERR . . . . . . . .	Number	 0023h	 
SEG_GRP_DECL_WARN  . . . . . . .	Number	 0030h	 
SEG_PARTBLK_SIZE . . . . . . . .	Number	 0041h	 
SEG_PARTENT_COUNT  . . . . . . .	Number	 0040h	 
SEG_PARTENT_SIZE . . . . . . . .	Number	 0010h	 
SELF_REL_FIX_ERR . . . . . . . .	Number	 0032h	 
STACK_SIZE_ERR . . . . . . . . .	Number	 0014h	 
STDERR . . . . . . . . . . . . .	Number	 0002h	 
STDIN  . . . . . . . . . . . . .	Number	 0000h	 
STDOUT . . . . . . . . . . . . .	Number	 0001h	 
SYMBOLTOKEN_ERR  . . . . . . . .	Number	 004Ah	 
TARGET_METH_ERR  . . . . . . . .	Number	 0036h	 
THEADR . . . . . . . . . . . . .	Number	 0080h	 
TMP_DISK_FULL_ERR  . . . . . . .	Number	 003Bh	 
TYPDEF . . . . . . . . . . . . .	Number	 008Eh	 
UNEXPECT_EOF_ERR . . . . . . . .	Number	 000Ah	 
UNKNOWN_ERRVAL . . . . . . . . .	Number	 0000h	 
UNKNOWN_ERR  . . . . . . . . . .	Number	 0004h	 
UNM_LEFT_PAREN_ERR . . . . . . .	Number	 0001h	 
UNM_RIGHT_PAREN_ERR  . . . . . .	Number	 0002h	 
UNRES_EXT_WARN . . . . . . . . .	Number	 002Dh	 
WARNING_ERRVAL . . . . . . . . .	Number	 0000h	 
WKEXT  . . . . . . . . . . . . .	Number	 00A8h	 
XMS_XMM_ERR  . . . . . . . . . .	Number	 0047h	 
_dat_seg_index . . . . . . . . .	Word	 2418	  _BSS	Public
_dat_seg_size  . . . . . . . . .	Word	 2414	  _BSS	Public
_dt_seg_index  . . . . . . . . .	Word	 2416	  _BSS	Public
_dt_seg_size . . . . . . . . . .	Word	 2412	  _BSS	Public
_edata_pubaddr . . . . . . . . .	Word	 0188	  _DATA	Public
_edata_segaddr . . . . . . . . .	Word	 018C	  _DATA	Public
_edata . . . . . . . . . . . . .	Number	 0000h	 External
_end_pubaddr . . . . . . . . . .	Word	 018A	  _DATA	Public
_end_segaddr . . . . . . . . . .	Word	 018E	  _DATA	Public
_end . . . . . . . . . . . . . .	Number	 0000h	 External
alloc_binblk_ptr . . . . . . . .	Word	 0186	  _DATA	Public
alloc_cdeclblk_ptr . . . . . . .	Word	 0166	  _DATA	Public
alloc_ems_trans  . . . . . . . .	L Near	 0000	  _TEXT	External
alloc_fixblk_ptr . . . . . . . .	Word	 0182	  _DATA	Public
alloc_grpblk_ptr . . . . . . . .	Word	 0172	  _DATA	Public
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Symbols 64 - 1




Symbols:

                N a m e                 Type     Value    Attr

alloc_libent_ptr . . . . . . . .	Word	 017E	  _DATA	Public
alloc_lnamesblk_ptr  . . . . . .	Word	 016A	  _DATA	Public
alloc_ovlpubblk_ptr  . . . . . .	Word	 0116	  _DATA	Public
alloc_pdeclblk_ptr . . . . . . .	Word	 0164	  _DATA	Public
alloc_pdnameblk_ptr  . . . . . .	Word	 0168	  _DATA	Public
alloc_relblk_ptr . . . . . . . .	Word	 017A	  _DATA	Public
alloc_segdefblk_ptr  . . . . . .	Word	 016E	  _DATA	Public
alloc_segpartblk_ptr . . . . . .	Word	 0176	  _DATA	Public
allocation_base  . . . . . . . .	Word	 2432	  _BSS	Public
allocation_top . . . . . . . . .	Word	 2434	  _BSS	Public
any_ddl  . . . . . . . . . . . .	Byte	 0027	  _DATA	Public
beep3  . . . . . . . . . . . . .	Byte	 0000	  CONST	
buffer_base  . . . . . . . . . .	Word	 2436	  _BSS	Public
buffer_end . . . . . . . . . . .	Word	 2438	  _BSS	Public
buffer_head  . . . . . . . . . .	Word	 243A	  _BSS	Public
buffer_size  . . . . . . . . . .	Word	 243E	  _BSS	Public
buffer_tail  . . . . . . . . . .	Word	 243C	  _BSS	Public
check_ems  . . . . . . . . . . .	L Near	 0000	  _TEXT	External
check_qlk  . . . . . . . . . . .	L Near	 0000	  _TEXT	External
check_xms  . . . . . . . . . . .	L Near	 0000	  _TEXT	External
cleanup  . . . . . . . . . . . .	L Near	 0000	  _TEXT	External
cmd_line . . . . . . . . . . . .	Byte	 246A	  _BSS	Public
communal_count . . . . . . . . .	Word	 0046	  _DATA	Public
create_ddl . . . . . . . . . . .	L Near	 0000	  _TEXT	External
credits  . . . . . . . . . . . .	L Near	 0000	  _TEXT	External
ctrlbreak  . . . . . . . . . . .	Byte	 2400	  _BSS	Public
current_extdef . . . . . . . . .	Word	 2448	  _BSS	Public
current_grpdef . . . . . . . . .	Word	 244C	  _BSS	Public
current_lib  . . . . . . . . . .	Word	 0042	  _DATA	Public
current_lnames . . . . . . . . .	Word	 2446	  _BSS	Public
current_obj  . . . . . . . . . .	Word	 0040	  _DATA	Public
current_segdef . . . . . . . . .	Word	 244A	  _BSS	Public
data_fixup_count . . . . . . . .	Word	 2450	  _BSS	Public
data_fixup_flag  . . . . . . . .	Word	 37B8	  _BSS	Public
data_ovlblk_ptr  . . . . . . . .	Word	 0122	  _DATA	Public
ddl_hold_buff  . . . . . . . . .	Word	 37B8	  _BSS	Public
ddl_save_libmod_entry  . . . . .	L Near	 0000	  _TEXT	External
ddl_symbol_lookup  . . . . . . .	DWord	 3FCA	  _BSS	Public
ddldat_filename  . . . . . . . .	Byte	 0100	  _BSS	Public
ddlpass_len  . . . . . . . . . .	Byte	 0003	  CONST	
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Symbols 65 - 1




Symbols:

                N a m e                 Type     Value    Attr

ddlpass_stop . . . . . . . . . .	Number	 002Bh	 
ddlpass_text . . . . . . . . . .	Byte	 0004	  CONST	
do_incremental . . . . . . . . .	L Near	 0000	  _TEXT	External
dos_version  . . . . . . . . . .	Byte	 2402	  _BSS	Public
ems3_flag  . . . . . . . . . . .	Byte	 002F	  _DATA	Public
ems_base . . . . . . . . . . . .	Word	 241A	  _BSS	Public
ems_currmap  . . . . . . . . . .	Word	 0126	  _DATA	Public
ems_handle . . . . . . . . . . .	Word	 0124	  _DATA	Public
ems_page_avail . . . . . . . . .	Word	 241E	  _BSS	Public
ems_pagecount  . . . . . . . . .	Word	 241C	  _BSS	Public
endpass_len  . . . . . . . . . .	Byte	 0144	  _DATA	
endpass_num  . . . . . . . . . .	Byte	 0157	  _DATA	
endpass_stop . . . . . . . . . .	Number	 0158h	 
endpass_text . . . . . . . . . .	Byte	 0145	  _DATA	
endwrite_len . . . . . . . . . .	Byte	 006E	  CONST	
endwrite_stop  . . . . . . . . .	Number	 0088h	 
endwrite_text  . . . . . . . . .	Byte	 006F	  CONST	
entry_offval . . . . . . . . . .	Word	 004E	  _DATA	Public
entry_segval . . . . . . . . . .	Word	 004C	  _DATA	Public
env_opt_storage  . . . . . . . .	Byte	 37B8	  _BSS	Public
eof_flag . . . . . . . . . . . .	Byte	 000E	  _DATA	Public
eof_pos  . . . . . . . . . . . .	Word	 244E	  _BSS	Public
exact_ovl_class  . . . . . . . .	Byte	 00FC	  _DATA	Public
exe_name . . . . . . . . . . . .	Byte	 0000	  _BSS	Public
exit_1 . . . . . . . . . . . . .	L Near	 01DA	  _TEXT	
exit_3 . . . . . . . . . . . . .	L Near	 0206	  _TEXT	
exit_link  . . . . . . . . . . .	L Near	 01EC	  _TEXT	Public
ext_defent_indptr  . . . . . . .	Word	 27BA	  _BSS	Public
file_pos_adj . . . . . . . . . .	DWord	 2456	  _BSS	Public
finish_map . . . . . . . . . . .	L Near	 0000	  _TEXT	External
first_binblk_ptr . . . . . . . .	Word	 0184	  _DATA	Public
first_cdeclblk_ptr . . . . . . .	Word	 0162	  _DATA	Public
first_fixblk_ptr . . . . . . . .	Word	 0180	  _DATA	Public
first_grpblk_ptr . . . . . . . .	Word	 0170	  _DATA	Public
first_libblk_ptr . . . . . . . .	Word	 015C	  _DATA	Public
first_libent_ptr . . . . . . . .	Word	 017C	  _DATA	Public
first_objblk_ptr . . . . . . . .	Word	 0158	  _DATA	Public
first_ovlpubblk_ptr  . . . . . .	Word	 0114	  _DATA	Public
first_pdeclblk_ptr . . . . . . .	Word	 0160	  _DATA	Public
first_relblk_ptr . . . . . . . .	Word	 0178	  _DATA	Public
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Symbols 66 - 1




Symbols:

                N a m e                 Type     Value    Attr

first_segdefblk_ptr  . . . . . .	Word	 016C	  _DATA	Public
first_segpartblk_ptr . . . . . .	Word	 0174	  _DATA	Public
frame_thrd_index . . . . . . . .	Word	 3FBA	  _BSS	Public
frame_thrd_meth  . . . . . . . .	Byte	 258A	  _BSS	Public
free_memory  . . . . . . . . . .	L Near	 0000	  _TEXT	External
get_memory . . . . . . . . . . .	L Near	 0000	  _TEXT	External
getargs  . . . . . . . . . . . .	L Near	 0000	  _TEXT	External
give_load_size . . . . . . . . .	L Near	 0000	  _TEXT	External
give_warn_count  . . . . . . . .	L Near	 0000	  _TEXT	External
grp_ent_indptr . . . . . . . . .	Word	 2790	  _BSS	Public
highest_exe_write  . . . . . . .	DWord	 0058	  _DATA	Public
ilf_rewind . . . . . . . . . . .	L Near	 0000	  _TEXT	External
ilf_write_eof  . . . . . . . . .	L Near	 0000	  _TEXT	External
image_handle . . . . . . . . . .	Word	 2426	  _BSS	Public
image_mem_ptr  . . . . . . . . .	Word	 2428	  _BSS	Public
image_size . . . . . . . . . . .	DWord	 2462	  _BSS	Public
inc_padval . . . . . . . . . . .	Byte	 001F	  _DATA	Public
inc_seg_clcode . . . . . . . . .	Byte	 27BA	  _BSS	Public
ind_tbl_array  . . . . . . . . .	Word	 2FB8	  _BSS	Public
ind_tbl_segdef . . . . . . . . .	Word	 240E	  _BSS	Public
init_map . . . . . . . . . . . .	L Near	 0000	  _TEXT	External
is_anyovls . . . . . . . . . . .	Byte	 0011	  _DATA	Public
is_args  . . . . . . . . . . . .	Byte	 0000	  _DATA	Public
is_beep  . . . . . . . . . . . .	Byte	 0016	  _DATA	Public
is_casesense . . . . . . . . . .	Byte	 0004	  _DATA	Public
is_clarion . . . . . . . . . . .	Byte	 001C	  _DATA	Public
is_clip5 . . . . . . . . . . . .	Byte	 0020	  _DATA	Public
is_clpinc  . . . . . . . . . . .	Byte	 001E	  _DATA	Public
is_comfile . . . . . . . . . . .	Byte	 0001	  _DATA	Public
is_ddl . . . . . . . . . . . . .	Byte	 0025	  _DATA	Public
is_dgroup  . . . . . . . . . . .	Byte	 000F	  _DATA	Public
is_dosseg  . . . . . . . . . . .	Byte	 0009	  _DATA	Public
is_ems_ovlpool . . . . . . . . .	Byte	 001A	  _DATA	Public
is_exit0 . . . . . . . . . . . .	Byte	 0015	  _DATA	Public
is_inlib . . . . . . . . . . . .	Byte	 0010	  _DATA	Public
is_inmem . . . . . . . . . . . .	Byte	 0006	  _DATA	Public
is_internal  . . . . . . . . . .	Byte	 001B	  _DATA	Public
is_linkinfo  . . . . . . . . . .	Byte	 0017	  _DATA	Public
is_mapexpand . . . . . . . . . .	Byte	 0003	  _DATA	Public
is_mapfile . . . . . . . . . . .	Byte	 0002	  _DATA	Public
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Symbols 67 - 1




Symbols:

                N a m e                 Type     Value    Attr

is_maxparval . . . . . . . . . .	Byte	 0013	  _DATA	Public
is_min_pool  . . . . . . . . . .	Byte	 0024	  _DATA	Public
is_msextlib  . . . . . . . . . .	Byte	 0007	  _DATA	Public
is_no_ems  . . . . . . . . . . .	Byte	 0019	  _DATA	Public
is_nodeflib  . . . . . . . . . .	Byte	 0008	  _DATA	Public
is_nonuldosseg . . . . . . . . .	Byte	 000A	  _DATA	Public
is_nowarn  . . . . . . . . . . .	Byte	 0014	  _DATA	Public
is_ohp . . . . . . . . . . . . .	Byte	 002C	  _DATA	Public
is_oht . . . . . . . . . . . . .	Byte	 002D	  _DATA	Public
is_ondisk  . . . . . . . . . . .	Byte	 0005	  _DATA	Public
is_quick . . . . . . . . . . . .	Byte	 002A	  _DATA	Public
is_reload  . . . . . . . . . . .	Byte	 0012	  _DATA	Public
is_smartmem  . . . . . . . . . .	Byte	 001D	  _DATA	Public
is_stackval  . . . . . . . . . .	Byte	 000B	  _DATA	Public
is_sympac  . . . . . . . . . . .	Byte	 002B	  _DATA	Public
is_tempfile  . . . . . . . . . .	Byte	 0018	  _DATA	Public
is_umb . . . . . . . . . . . . .	Byte	 002E	  _DATA	Public
is_xms . . . . . . . . . . . . .	Byte	 0023	  _DATA	Public
is_xpstash . . . . . . . . . . .	Byte	 0029	  _DATA	Public
is_xtstash . . . . . . . . . . .	Byte	 0028	  _DATA	Public
largest_ovl  . . . . . . . . . .	Word	 0118	  _DATA	Public
last_libblk_ptr  . . . . . . . .	Word	 015E	  _DATA	Public
last_objblk_ptr  . . . . . . . .	Word	 015A	  _DATA	Public
lib_count  . . . . . . . . . . .	Word	 0038	  _DATA	Public
lib_id . . . . . . . . . . . . .	DWord	 2466	  _BSS	Public
lib_len  . . . . . . . . . . . .	Byte	 003E	  CONST	
lib_page_storage . . . . . . . .	Word	 37B8	  _BSS	Public
lib_pos_adj  . . . . . . . . . .	DWord	 245E	  _BSS	Public
lib_stop . . . . . . . . . . . .	Number	 0052h	 
lib_text . . . . . . . . . . . .	Byte	 003F	  CONST	
lnames_ent_indptr  . . . . . . .	DWord	 3FCA	  _BSS	Public
lnames_hash  . . . . . . . . . .	DWord	 1400	  _BSS	Public
lookup_tbl_array . . . . . . . .	Word	 2FB8	  _BSS	Public
lookup_tbl_segdef  . . . . . . .	Word	 240C	  _BSS	Public
m2 . . . . . . . . . . . . . . .	L Near	 0046	  _TEXT	
m3 . . . . . . . . . . . . . . .	L Near	 007E	  _TEXT	
m4 . . . . . . . . . . . . . . .	L Near	 013D	  _TEXT	
m_nocreate . . . . . . . . . . .	L Near	 0098	  _TEXT	
mach_1 . . . . . . . . . . . . .	L Near	 01B4	  _TEXT	
map_handle . . . . . . . . . . .	Word	 242A	  _BSS	Public
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Symbols 68 - 1




Symbols:

                N a m e                 Type     Value    Attr

map_name . . . . . . . . . . . .	Byte	 0080	  _BSS	Public
master_segblk  . . . . . . . . .	Word	 2452	  _BSS	Public
maxpar_value . . . . . . . . . .	Word	 0032	  _DATA	Public
memory_blk_base  . . . . . . . .	Word	 242C	  _BSS	Public
memory_blk_end . . . . . . . . .	Word	 2430	  _BSS	Public
memory_blk_size  . . . . . . . .	Word	 242E	  _BSS	Public
mod_alloc_base . . . . . . . . .	Word	 0000	  _DATA	External
module_count . . . . . . . . . .	Word	 003A	  _DATA	Public
no_udl . . . . . . . . . . . . .	L Near	 0135	  _TEXT	
nonovl_rvect . . . . . . . . . .	Byte	 2408	  _BSS	Public
number_reloc . . . . . . . . . .	Word	 0044	  _DATA	Public
obj_count  . . . . . . . . . . .	Word	 0036	  _DATA	Public
obj_len  . . . . . . . . . . . .	Byte	 002B	  CONST	
obj_ovl_flag . . . . . . . . . .	Byte	 2404	  _BSS	Public
obj_stop . . . . . . . . . . . .	Number	 003Eh	 
obj_text . . . . . . . . . . . .	Byte	 002C	  CONST	
ovl_class_name . . . . . . . . .	Byte	 256A	  _BSS	Public
ovl_class  . . . . . . . . . . .	Byte	 007C	  _DATA	Public
ovl_code_id  . . . . . . . . . .	Word	 011C	  _DATA	Public
ovl_count  . . . . . . . . . . .	Word	 0110	  _DATA	Public
ovl_data_id  . . . . . . . . . .	Word	 011E	  _DATA	Public
ovl_entry_point  . . . . . . . .	L Near	 0000	  _TEXT	External
ovl_filename . . . . . . . . . .	Byte	 0100	  _BSS	Public
ovl_filepos_blk  . . . . . . . .	Word	 2454	  _BSS	Public
ovl_handle . . . . . . . . . . .	Word	 0120	  _DATA	Public
ovl_ioblk  . . . . . . . . . . .	Word	 240A	  _BSS	Public
ovl_max_load_size  . . . . . . .	Word	 010C	  _DATA	Public
ovl_max_load . . . . . . . . . .	Word	 010A	  _DATA	Public
ovl_mem_alloc  . . . . . . . . .	Byte	 0106	  _DATA	Public
ovl_nopath . . . . . . . . . . .	Byte	 0180	  _BSS	Public
ovl_ohp_alloc  . . . . . . . . .	Byte	 0108	  _DATA	Public
ovl_ohp_size . . . . . . . . . .	Word	 0102	  _DATA	Public
ovl_oht_alloc  . . . . . . . . .	Byte	 0109	  _DATA	Public
ovl_oht_size . . . . . . . . . .	Word	 0104	  _DATA	Public
ovl_ox_evar  . . . . . . . . . .	Byte	 005C	  _DATA	Public
ovl_pool . . . . . . . . . . . .	DWord	 00FE	  _DATA	Public
ovl_pubcount . . . . . . . . . .	Word	 0112	  _DATA	Public
ovl_reloc_array  . . . . . . . .	Word	 2FB8	  _BSS	Public
ovl_stack  . . . . . . . . . . .	Word	 010E	  _DATA	Public
ovlpub_array . . . . . . . . . .	Word	 2FB8	  _BSS	Public
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Symbols 69 - 1




Symbols:

                N a m e                 Type     Value    Attr

p1_p1lib . . . . . . . . . . . .	L Near	 00DD	  _TEXT	
p1lend . . . . . . . . . . . . .	L Near	 00F3	  _TEXT	
p1oend . . . . . . . . . . . . .	L Near	 00D3	  _TEXT	
p1ostart . . . . . . . . . . . .	L Near	 00B1	  _TEXT	
p2_endlib  . . . . . . . . . . .	L Near	 0194	  _TEXT	
p2lend . . . . . . . . . . . . .	L Near	 01A7	  _TEXT	
p2oend . . . . . . . . . . . . .	L Near	 0187	  _TEXT	
p2ostart . . . . . . . . . . . .	L Near	 0165	  _TEXT	
parse  . . . . . . . . . . . . .	L Near	 0000	  _TEXT	External
pass1  . . . . . . . . . . . . .	L Near	 0000	  _TEXT	External
pass2  . . . . . . . . . . . . .	L Near	 0000	  _TEXT	External
prev_flag  . . . . . . . . . . .	Byte	 000D	  _DATA	Public
prev_libname . . . . . . . . . .	Byte	 24EA	  _BSS	Public
prev_pos_adj . . . . . . . . . .	DWord	 245A	  _BSS	Public
prev_read_ptr  . . . . . . . . .	Word	 2442	  _BSS	Public
prev_rec_len . . . . . . . . . .	Word	 2444	  _BSS	Public
proc1_libs . . . . . . . . . . .	L Near	 0000	  _TEXT	External
proc2_libs . . . . . . . . . . .	L Near	 0000	  _TEXT	External
proc_ddl . . . . . . . . . . . .	L Near	 0000	  _TEXT	External
psp  . . . . . . . . . . . . . .	Word	 2424	  _BSS	Public
pub_sym_count  . . . . . . . . .	DWord	 0050	  _DATA	Public
pubdecl_hash . . . . . . . . . .	Word	 0200	  _BSS	Public
read_buff_ptr  . . . . . . . . .	Word	 2440	  _BSS	Public
reinit_variables . . . . . . . .	L Near	 0000	  _TEXT	External
resolve_communals  . . . . . . .	L Near	 0000	  _TEXT	External
second_ovl . . . . . . . . . . .	Word	 011A	  _DATA	Public
seg_count  . . . . . . . . . . .	Word	 003C	  _DATA	Public
seg_defent_indptr  . . . . . . .	Word	 2592	  _BSS	Public
seg_ovlclass . . . . . . . . . .	Byte	 2406	  _BSS	Public
seg_partent_indptr . . . . . . .	Word	 2592	  _BSS	Public
segcall_tbl_segdef . . . . . . .	Word	 2410	  _BSS	Public
segdef_count . . . . . . . . . .	Word	 003E	  _DATA	Public
segdef_hash  . . . . . . . . . .	Word	 0A00	  _BSS	Public
setup_exe_image  . . . . . . . .	L Near	 0000	  _TEXT	External
setup  . . . . . . . . . . . . .	L Near	 0000	  _TEXT	External
stack_offval . . . . . . . . . .	Word	 004A	  _DATA	Public
stack_segval . . . . . . . . . .	Word	 0048	  _DATA	Public
stack_value  . . . . . . . . . .	Word	 0030	  _DATA	Public
start  . . . . . . . . . . . . .	L Near	 0000	  _TEXT	
stpass_len . . . . . . . . . . .	Byte	 012E	  _DATA	
Microsoft (R) Macro Assembler Version 6.15.8803		    12/11/24 08:21:26
WARPLINK machlink					     Symbols 70 - 1




Symbols:

                N a m e                 Type     Value    Attr

stpass_num . . . . . . . . . . .	Byte	 0143	  _DATA	
stpass_stop  . . . . . . . . . .	Number	 0144h	 
stpass_text  . . . . . . . . . .	Byte	 012F	  _DATA	
stwrite_len  . . . . . . . . . .	Byte	 0052	  CONST	
stwrite_stop . . . . . . . . . .	Number	 006Eh	 
stwrite_text . . . . . . . . . .	Byte	 0053	  CONST	
summary  . . . . . . . . . . . .	L Near	 0000	  _TEXT	External
target_thrd_index  . . . . . . .	Word	 3FC2	  _BSS	Public
target_thrd_meth . . . . . . . .	Byte	 258E	  _BSS	Public
tmod_name  . . . . . . . . . . .	Byte	 24EA	  _BSS	Public
tmp_in_emsxms  . . . . . . . . .	Byte	 0021	  _DATA	Public
tmp_in_xms . . . . . . . . . . .	Byte	 0022	  _DATA	Public
to_exit_1  . . . . . . . . . . .	L Near	 0043	  _TEXT	
tot_sym_count  . . . . . . . . .	DWord	 0054	  _DATA	Public
udl_proc_pass  . . . . . . . . .	Byte	 0107	  _DATA	Public
use_ddl  . . . . . . . . . . . .	Byte	 0026	  _DATA	Public
warn_count . . . . . . . . . . .	Word	 0034	  _DATA	Public
wend . . . . . . . . . . . . . .	L Near	 01D4	  _TEXT	
wrap_flag  . . . . . . . . . . .	Byte	 000C	  _DATA	Public
write_program  . . . . . . . . .	L Near	 0000	  _TEXT	External
write_qlk_unres  . . . . . . . .	L Near	 0000	  _TEXT	External
writing_qlk_flag . . . . . . . .	Byte	 0000	  _DATA	External
wstart . . . . . . . . . . . . .	L Near	 01C1	  _TEXT	
xms_addr . . . . . . . . . . . .	DWord	 2420	  _BSS	Public
zero_table . . . . . . . . . . .	Word	 1200	  _BSS	Public

	   0 Warnings
	   0 Errors
